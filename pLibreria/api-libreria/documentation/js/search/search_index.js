var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.147,1,2.467]],["body/modules/AppModule.html",[0,1.436,1,4.941,2,1.334,3,1.896,4,2.7,5,2.7,6,3.647,7,0.021,8,3.942,9,3.942,10,3.172,11,3.942,12,3.942,13,3.942,14,2.139,15,1.505,16,1.505,17,0.142,18,0.142,19,0.122,20,3.158,21,2.281,22,0.443,23,0.657,24,2.7,25,2.174,26,1.604,27,1.126,28,3.158,29,3.158,30,3.158,31,3.158,32,3.158,33,3.158,34,3.158,35,3.158,36,3.158,37,0.521,38,2.7,39,3.158,40,3.158,41,3.158,42,3.158,43,3.158,44,3.158,45,3.158,46,3.158,47,1.717,48,3.158,49,3.158,50,2.139,51,3.158,52,0.142,53,0.096,54,0.013,55,0.013]],["title/controllers/AuthController.html",[56,1.21,57,2.467]],["body/controllers/AuthController.html",[7,0.021,17,0.171,18,0.171,19,0.147,22,0.376,23,0.789,37,0.841,52,0.171,53,0.115,54,0.014,55,0.014,56,1.282,57,3.509,58,1.282,59,3.245,60,2.063,61,3.245,62,0.589,63,1.721,64,1.466,65,4.359,66,3.245,67,3.86,68,1.466,69,5.097,70,0.946,71,3.795,72,1.818,73,1.39,74,1.39,75,1.721,76,3.245,77,4.173,78,5.097,79,3.795,80,2.217,81,2.217,82,2.217,83,2.217,84,1.928,85,2.924,86,3.245,87,3.245,88,3.795,89,2.063,90,1.43,91,2.217,92,1.631,93,3.795,94,3.795,95,3.795]],["title/modules/AuthModule.html",[0,1.147,6,2.093]],["body/modules/AuthModule.html",[0,1.372,2,1.251,3,1.811,6,3.901,7,0.021,14,2.043,15,1.412,16,1.412,17,0.134,18,0.134,19,0.115,21,2.178,22,0.43,23,0.616,24,4.309,25,2.039,26,2.178,27,1.056,52,0.134,53,0.09,54,0.012,55,0.012,57,3.469,58,1.448,85,3.473,86,2.533,92,0.948,96,2.533,97,2.533,98,2.533,99,4.317,100,2.962,101,2.331,102,3.257,103,2.962,104,2.505,105,2.25,106,4.287,107,2.25,108,4.287,109,2.25,110,4.723,111,2.962,112,2.533,113,2.962,114,2.962,115,3.828,116,2.962,117,2.962,118,2.962,119,3.666,120,5.039,121,3.666,122,4.287,123,4.287,124,4.287,125,4.287,126,2.962]],["title/injectables/AuthService.html",[85,1.82,127,1.087]],["body/injectables/AuthService.html",[7,0.021,17,0.098,18,0.098,19,0.084,22,0.384,23,0.453,27,0.777,37,0.846,47,2.955,50,1.621,52,0.098,53,0.066,54,0.01,55,0.01,62,0.338,63,1.149,64,0.978,65,3.578,66,2.908,67,3.176,70,0.952,72,1.829,73,1.398,74,1.398,75,1.597,76,1.862,77,3.587,84,1.107,85,1.728,87,1.862,90,1.282,92,1.339,104,3.176,105,1.655,109,1.655,127,1.032,128,1.038,129,1.862,130,3.176,131,3.433,132,4.184,133,3.578,134,1.987,135,1.862,136,2.987,137,5.679,138,2.178,139,2.908,140,2.178,141,2.341,142,2.178,143,2.987,144,2.178,145,2.908,146,1.862,147,2.178,148,3.897,149,2.908,150,2.178,151,1.862,152,1.499,153,2.908,154,1.375,155,0.868,156,2.908,157,1.862,158,1.862,159,2.178,160,2.341,161,2.178,162,1.862,163,1.862,164,1.862,165,2.634,166,2.997,167,1.987,168,2.178,169,1.862,170,3.256,171,2.403,172,2.178,173,3.401,174,2.178,175,2.178,176,2.178,177,2.178,178,3.401,179,2.178,180,4.044,181,3.401,182,3.401,183,2.584,184,2.908,185,3.401,186,2.178,187,2.178,188,2.178,189,2.178,190,1.862,191,1.862,192,1.862,193,1.862,194,1.862,195,1.862,196,2.178]],["title/entities/Autor.html",[197,1.35,198,2.467]],["body/entities/Autor.html",[7,0.021,17,0.178,18,0.178,19,0.153,22,0.342,37,0.969,50,2.495,52,0.178,53,0.12,54,0.015,55,0.015,62,0.613,68,1.506,70,1.09,73,1.601,74,1.428,155,1.576,197,1.974,198,3.605,199,2.148,200,3.379,201,1.868,202,2.495,203,3.059,204,1.363,205,3.059,206,3.952,207,3.177,208,3.952,209,3.059,210,3.059,211,3.952,212,2.309,213,3.978,214,2.309,215,3.002,216,3.002,217,3.952,218,2.721,219,2.496,220,3.379]],["title/controllers/AutoresController.html",[56,1.21,221,2.467]],["body/controllers/AutoresController.html",[7,0.021,17,0.133,18,0.133,19,0.114,22,0.36,23,0.612,37,0.909,52,0.133,53,0.089,54,0.012,55,0.012,56,0.995,58,0.995,60,1.601,62,0.457,63,1.442,64,1.228,68,1.682,70,1.086,72,1.965,73,1.502,74,1.502,75,1.975,80,2.934,81,2.494,82,1.721,83,1.721,84,1.497,89,1.601,90,1.11,91,1.721,92,1.871,202,2.906,204,1.524,221,2.94,222,2.519,223,2.519,224,2.469,225,1.914,226,1.914,227,1.914,228,2.519,229,3.562,230,2.946,231,2.946,232,1.721,233,3.244,234,2.946,235,1.721,236,3.244,237,2.946,238,1.721,239,4.069,240,3.244,241,2.946,242,2.934,243,2.519,244,1.32,245,3.244,246,1.32,247,2.946,248,2.946,249,2.946,250,2.238,251,2.946,252,2.238,253,2.946,254,2.238,255,2.946]],["title/modules/AutoresModule.html",[0,1.147,8,2.263]],["body/modules/AutoresModule.html",[0,1.759,2,1.797,3,2.321,7,0.021,8,4.308,14,2.619,15,2.028,16,2.028,17,0.192,18,0.192,19,0.165,21,2.162,22,0.435,23,0.885,26,2.162,27,1.518,52,0.192,53,0.129,54,0.015,55,0.015,58,1.856,101,2.988,198,2.93,221,4.191,242,3.985,243,3.639,256,3.639,257,3.639,258,4.255,259,4.255,260,4.255,261,4.255]],["title/injectables/AutoresService.html",[127,1.087,242,2.093]],["body/injectables/AutoresService.html",[7,0.021,17,0.142,18,0.142,19,0.121,22,0.34,23,0.653,37,0.936,52,0.142,53,0.095,54,0.012,55,0.012,62,0.487,63,1.509,64,1.285,70,1.113,72,2.023,73,1.546,74,1.546,75,2.165,92,1.918,127,1.356,128,1.496,171,1.595,202,2.969,204,1.391,223,2.684,224,2.542,225,2.003,226,2.003,227,2.003,228,3.822,229,3.501,232,2.611,235,2.611,238,2.611,239,4.048,242,2.611,244,1.407,245,3.396,246,1.407,262,2.684,263,3.139,264,3.139,265,3.625,266,3.139,267,3.139,268,3.139,269,3.785,270,2.161,271,5.671,272,1.982,273,1.982]],["title/entities/Categoria.html",[197,1.35,274,2.263]],["body/entities/Categoria.html",[7,0.021,17,0.184,18,0.184,19,0.158,22,0.349,37,0.882,50,2.546,52,0.184,53,0.124,54,0.015,55,0.015,62,0.632,68,1.536,70,0.992,73,1.625,155,1.625,197,2.014,199,2.215,201,1.905,202,2.546,204,1.383,205,3.121,207,3.029,209,3.121,210,3.121,212,2.38,213,4.059,214,2.38,215,3.095,216,3.095,218,2.805,219,2.573,220,3.484,274,3.374,275,3.484,276,4.074,277,4.074,278,4.074]],["title/controllers/CategoriasController.html",[56,1.21,279,2.467]],["body/controllers/CategoriasController.html",[7,0.021,17,0.133,18,0.133,19,0.114,22,0.36,23,0.612,37,0.909,52,0.133,53,0.089,54,0.012,55,0.012,56,0.995,58,0.995,60,1.601,62,0.457,63,1.442,64,1.228,68,1.682,70,1.086,72,1.965,73,1.502,74,1.502,75,1.975,80,2.934,81,2.494,82,1.721,83,1.721,84,1.497,89,1.601,90,1.11,91,1.721,92,1.871,202,2.906,204,1.524,224,2.469,225,1.914,226,1.914,227,1.914,232,1.721,233,3.244,235,1.721,236,3.244,238,1.721,240,3.244,244,1.32,246,1.32,250,2.238,252,2.238,254,2.238,279,2.94,280,2.519,281,2.519,282,2.519,283,3.562,284,2.946,285,2.946,286,2.946,287,2.946,288,4.069,289,2.946,290,2.934,291,2.519,292,3.244,293,2.946,294,2.946,295,2.946,296,2.946,297,2.946,298,2.946]],["title/modules/CategoriasModule.html",[0,1.147,9,2.263]],["body/modules/CategoriasModule.html",[0,1.754,2,1.79,3,2.315,7,0.021,9,4.304,14,2.612,15,2.02,16,2.02,17,0.191,18,0.191,19,0.164,21,2.153,22,0.435,23,0.881,26,2.153,27,1.512,52,0.191,53,0.129,54,0.015,55,0.015,58,1.851,101,2.98,112,3.624,274,3.462,279,4.183,290,3.981,291,3.624,299,3.624,300,3.624,301,4.238,302,4.238,303,4.238]],["title/injectables/CategoriasService.html",[127,1.087,290,2.093]],["body/injectables/CategoriasService.html",[7,0.021,17,0.142,18,0.142,19,0.121,22,0.34,23,0.653,37,0.936,52,0.142,53,0.095,54,0.012,55,0.012,62,0.487,63,1.509,64,1.285,70,1.113,72,2.023,73,1.546,74,1.546,75,2.165,92,1.918,127,1.356,128,1.496,171,1.595,202,2.969,204,1.391,224,2.542,225,2.003,226,2.003,227,2.003,232,2.611,235,2.611,238,2.611,244,1.407,246,1.407,265,3.625,269,3.785,270,2.161,272,1.982,273,1.982,274,3.582,281,2.684,282,3.822,283,3.501,288,4.048,290,2.611,292,3.396,304,2.684,305,3.139,306,3.139,307,3.139,308,3.139,309,3.139]],["title/entities/Cliente.html",[197,1.35,310,1.606]],["body/entities/Cliente.html",[7,0.021,17,0.113,18,0.113,19,0.097,22,0.248,37,0.987,50,3.06,52,0.113,53,0.076,54,0.011,55,0.011,62,0.391,68,1.719,70,1.11,73,1.391,74,1.678,155,1.003,165,2.052,197,1.432,199,1.368,201,1.355,203,2.675,204,1.534,205,2.22,207,2.926,209,3.751,210,3.596,212,1.47,213,2.887,214,1.47,215,1.912,218,3.152,219,3.222,310,1.703,311,2.152,312,3.152,313,3.152,314,3.152,315,3.152,316,2.516,317,2.516,318,2.516,319,2.516,320,3.249,321,4.579,322,2.516,323,2.516,324,2.516,325,2.516,326,3.249,327,1.912,328,3.8,329,2.516,330,2.152,331,2.152,332,2.516,333,2.516,334,2.516,335,1.732,336,2.516,337,2.516,338,2.516,339,2.4,340,2.516,341,2.516,342,1.732,343,2.152,344,2.516,345,2.516,346,2.516,347,2.516,348,2.516,349,2.516,350,2.516,351,2.516,352,2.516,353,2.516,354,2.516,355,2.516,356,2.516]],["title/controllers/ClientesController.html",[56,1.21,357,2.467]],["body/controllers/ClientesController.html",[7,0.021,17,0.133,18,0.133,19,0.114,22,0.36,23,0.612,37,0.909,52,0.133,53,0.089,54,0.012,55,0.012,56,0.995,58,0.995,60,1.601,62,0.457,63,1.442,64,1.228,68,1.682,70,1.086,72,1.965,73,1.502,74,1.502,75,1.975,80,2.934,81,2.494,82,1.721,83,1.721,84,1.497,89,1.601,90,1.11,91,1.721,92,1.871,204,1.524,224,2.469,225,1.914,226,1.914,227,1.914,244,1.32,246,1.32,313,4.198,327,2.238,357,2.94,358,2.519,359,2.519,360,3.562,361,2.946,362,2.946,363,2.519,364,4.27,365,2.946,366,2.519,367,4.27,368,2.946,369,2.519,370,4.069,371,4.27,372,2.946,373,2.394,374,2.519,375,3.244,376,2.946,377,2.946,378,2.946,379,2.946,380,2.946,381,2.946,382,2.946,383,2.946,384,2.946]],["title/modules/ClientesModule.html",[0,1.147,10,1.82]],["body/modules/ClientesModule.html",[0,1.697,2,1.701,3,2.24,7,0.021,10,3.481,14,2.527,15,1.919,16,1.919,17,0.182,18,0.182,19,0.156,21,2.046,22,0.428,23,0.837,26,2.694,27,1.436,52,0.182,53,0.122,54,0.015,55,0.015,58,1.791,101,2.882,102,4.028,310,1.805,357,4.081,373,3.432,374,3.444,385,3.444,386,3.444,387,3.444,388,4.027,389,4.027,390,3.444,391,4.027]],["title/injectables/ClientesService.html",[127,1.087,373,1.707]],["body/injectables/ClientesService.html",[7,0.021,17,0.099,18,0.099,19,0.085,22,0.357,23,0.458,27,0.785,37,0.901,50,1.049,52,0.099,53,0.067,54,0.01,55,0.01,62,0.342,63,1.158,64,0.986,70,1.095,72,1.947,73,1.489,74,1.489,75,2.046,84,1.118,90,0.829,92,1.939,127,1.04,128,1.049,130,3.19,131,2.778,133,3.602,134,2.003,136,3.003,141,2.361,146,1.882,148,3.916,149,2.932,151,1.882,152,1.515,154,1.39,155,0.877,160,2.361,166,2.003,167,2.003,170,2.9,171,2.416,183,2.605,184,1.882,190,1.882,191,1.882,192,1.882,193,1.882,194,1.882,195,1.882,203,1.286,204,1.464,224,2.131,225,1.537,226,1.537,227,1.537,244,0.986,246,0.986,269,3.255,270,1.515,272,1.39,273,1.39,310,2.555,313,3.925,327,1.672,342,1.515,359,2.932,360,3.011,363,2.932,366,2.932,369,2.932,370,3.601,373,1.634,375,2.605,390,1.882,392,1.882,393,4.756,394,2.201,395,2.201,396,3.429,397,2.201,398,2.201,399,2.201,400,2.201,401,2.201,402,2.201,403,2.201,404,2.201,405,2.201,406,2.201,407,2.201,408,1.882,409,2.201,410,2.201,411,1.882,412,1.882,413,2.201,414,2.201,415,3.429,416,2.201,417,2.201]],["title/classes/CreateAutoreDto.html",[53,0.109,229,2.093]],["body/classes/CreateAutoreDto.html",[7,0.019,17,0.246,18,0.246,19,0.21,52,0.246,53,0.165,54,0.018,55,0.018,229,3.737,418,1.941,419,4.655,420,4.135]],["title/classes/CreateCategoriaDto.html",[53,0.109,283,2.093]],["body/classes/CreateCategoriaDto.html",[7,0.019,17,0.246,18,0.246,19,0.21,52,0.246,53,0.165,54,0.018,55,0.018,283,3.737,418,1.941,421,4.655,422,4.135]],["title/classes/CreateClienteDto.html",[53,0.109,360,2.093]],["body/classes/CreateClienteDto.html",[7,0.02,17,0.164,18,0.164,19,0.14,22,0.237,37,1.043,52,0.164,53,0.15,54,0.014,55,0.014,62,0.563,68,1.817,70,1.173,73,1.533,74,1.777,165,2.52,201,1.762,204,1.616,312,3.87,314,3.87,315,3.87,360,2.887,418,1.293,423,5.575,424,2.754,425,3.402,426,3.625,427,4.807,428,3.625,429,3.625,430,3.625,431,3.625,432,3.625,433,5.163,434,4.117,435,2.289,436,2.118,437,4.349]],["title/classes/CreateLibroDto.html",[53,0.109,438,2.093]],["body/classes/CreateLibroDto.html",[7,0.02,17,0.131,18,0.131,19,0.112,22,0.189,37,1.079,52,0.131,53,0.128,54,0.012,55,0.012,62,0.45,68,1.88,70,1.214,74,1.889,201,1.505,204,1.629,265,2.293,418,1.033,425,2.904,427,4.674,433,5.351,434,4.196,435,1.83,436,1.692,437,4.308,438,2.464,439,5.681,440,2.201,441,3.425,442,4.255,443,4.255,444,4.255,445,4.255,446,4.255,447,4.255,448,4.255,449,4.255,450,2.897,451,2.897,452,2.897,453,2.897,454,2.897,455,2.897,456,2.897,457,2.897,458,4.219,459,2.897,460,2.897,461,2.897,462,2.897,463,4.219,464,2.897]],["title/classes/CreateProfileDto.html",[53,0.109,465,2.093]],["body/classes/CreateProfileDto.html",[7,0.02,17,0.161,18,0.161,19,0.138,22,0.234,37,1.071,47,3.034,52,0.161,53,0.149,54,0.014,55,0.014,62,0.555,68,1.867,70,1.205,165,2.502,201,1.746,204,1.64,312,3.843,314,3.843,315,3.843,418,1.275,425,4.47,434,4.198,435,2.258,436,2.089,437,4.47,441,3.843,465,2.86,466,5.684,467,2.717,468,3.576,469,3.576,470,3.576,471,3.576,472,3.576,473,3.576]],["title/classes/CreateUserDto.html",[53,0.109,67,2.093]],["body/classes/CreateUserDto.html",[7,0.02,17,0.174,18,0.174,19,0.149,22,0.253,37,0.958,47,3.51,52,0.174,53,0.157,54,0.014,55,0.014,62,0.6,67,3.014,68,1.67,70,1.078,165,2.603,201,1.84,204,1.498,265,2.805,418,1.378,425,2.661,434,3.914,435,2.441,436,2.258,437,2.661,474,5.3,475,2.936,476,4.412,477,3.305,478,3.865,479,3.865,480,3.305,481,4.412,482,4.412,483,4.412,484,4.412,485,4.412,486,4.412,487,3.865,488,4.412,489,4.412,490,3.305,491,3.305,492,3.305,493,3.305,494,3.865]],["title/interfaces/JwtPayload.html",[143,2.263,495,2.467]],["body/interfaces/JwtPayload.html",[7,0.02,17,0.227,18,0.227,19,0.194,37,0.83,52,0.227,54,0.017,55,0.017,62,0.78,143,3.853,165,2.944,201,2.176,204,1.416,331,4.299,495,3.461,496,5.027,497,4.299,498,4.299,499,5.027,500,5.027,501,5.027,502,4.299]],["title/injectables/JwtStrategy.html",[99,2.263,127,1.087]],["body/injectables/JwtStrategy.html",[7,0.021,17,0.12,18,0.12,19,0.103,22,0.409,23,0.552,25,1.828,27,0.947,37,0.653,52,0.12,53,0.081,54,0.011,55,0.011,61,2.271,62,0.412,63,1.336,70,0.735,72,1.411,73,1.079,74,1.079,75,0.897,90,1.001,92,0.85,99,2.499,104,3.433,105,2.018,107,2.018,110,5.206,115,2.018,121,2.271,127,1.2,128,1.266,130,2.763,131,1.551,134,2.763,135,2.271,136,3.31,139,3.384,143,3.31,145,4.044,153,2.271,154,2.499,155,1.059,157,2.271,158,2.271,162,4.482,163,3.384,164,4.044,165,1.773,166,2.312,167,1.551,170,2.724,171,2.011,180,4.044,330,2.271,335,3.608,339,1.677,342,3.608,343,2.271,503,2.271,504,5.241,505,2.656,506,2.656,507,2.656,508,3.957,509,3.957,510,2.656,511,3.957,512,2.271,513,1.444,514,2.656,515,2.271,516,2.656,517,2.656,518,2.656,519,2.656,520,2.656,521,2.656,522,2.656,523,2.656,524,2.656,525,2.656,526,4.729,527,3.957,528,2.656,529,2.656,530,2.656,531,2.656,532,2.656,533,2.656,534,2.656,535,2.656,536,3.957,537,2.656,538,2.656,539,2.656,540,2.271,541,2.656,542,2.656,543,2.656,544,2.656,545,2.656,546,2.656,547,2.656,548,2.656,549,2.656,550,2.656,551,2.656,552,2.656,553,2.656,554,2.656]],["title/entities/Libro.html",[197,1.35,207,1.82]],["body/entities/Libro.html",[7,0.021,17,0.111,18,0.111,19,0.095,22,0.244,37,1.052,50,3.089,52,0.111,53,0.074,54,0.01,55,0.01,62,0.381,68,1.834,70,1.184,73,0.668,155,0.978,197,1.404,199,1.333,201,1.329,203,1.432,204,1.586,205,2.177,207,1.893,209,3.84,210,3.462,212,2.177,214,1.432,218,3.103,219,2.353,265,2.025,310,2.803,326,3.186,335,1.688,339,1.548,442,3.854,443,3.854,444,3.854,445,3.854,446,3.854,447,3.854,448,3.854,449,3.854,555,2.097,556,3.424,557,2.452,558,3.726,559,2.452,560,2.452,561,2.452,562,4.305,563,2.452,564,3.726,565,3.186,566,3.186,567,2.452,568,2.452,569,2.452,570,2.452,571,2.452,572,2.452,573,2.452,574,2.452,575,3.726,576,2.452,577,2.452,578,2.452,579,2.452,580,2.452,581,2.452,582,2.452,583,2.452,584,2.452,585,3.726,586,2.452]],["title/controllers/LibrosController.html",[56,1.21,587,2.467]],["body/controllers/LibrosController.html",[7,0.021,17,0.133,18,0.133,19,0.114,22,0.36,23,0.612,37,0.909,52,0.133,53,0.089,54,0.012,55,0.012,56,0.995,58,0.995,60,1.601,62,0.457,63,1.442,64,1.228,68,1.682,70,1.086,72,1.965,73,1.502,74,1.502,75,1.975,80,2.934,81,2.494,82,1.721,83,1.721,84,1.497,89,1.601,90,1.11,91,1.721,92,1.871,203,1.721,204,1.524,224,2.469,225,1.914,226,1.914,227,1.914,244,1.32,246,1.32,438,3.562,556,4.633,587,2.94,588,2.519,589,2.519,590,2.946,591,2.946,592,2.519,593,4.27,594,2.946,595,2.519,596,4.27,597,2.946,598,2.519,599,4.069,600,4.27,601,2.946,602,2.934,603,2.519,604,3.244,605,2.946,606,2.946,607,2.946,608,2.946,609,2.946,610,2.946,611,2.946,612,2.946,613,2.946]],["title/modules/LibrosModule.html",[0,1.147,11,2.263]],["body/modules/LibrosModule.html",[0,1.635,2,1.609,3,2.158,7,0.021,10,3.361,11,4.393,14,2.435,15,1.815,16,1.815,17,0.172,18,0.172,19,0.147,21,2.596,22,0.432,23,0.792,26,2.596,27,1.358,52,0.172,53,0.116,54,0.014,55,0.014,58,1.726,101,2.777,102,3.882,207,1.935,587,3.969,602,4.172,603,3.257,614,3.257,615,3.809,616,3.257,617,3.257,618,3.809,619,3.809,620,3.257,621,2.894,622,3.809]],["title/injectables/LibrosService.html",[127,1.087,602,2.093]],["body/injectables/LibrosService.html",[7,0.021,17,0.099,18,0.099,19,0.085,22,0.373,23,0.458,27,0.787,37,0.851,38,1.886,52,0.099,53,0.067,54,0.01,55,0.01,62,0.342,63,1.16,64,0.988,70,1.015,72,1.84,73,1.407,74,1.407,75,1.927,90,1.294,92,1.888,119,1.886,127,1.042,128,1.051,130,2.464,131,2.006,134,2.006,136,3.007,141,1.518,148,1.675,152,1.518,154,1.393,155,0.879,160,1.518,166,3.014,167,2.464,170,1.518,171,1.745,183,1.675,203,1.288,204,1.488,207,3.149,224,2.134,225,1.539,226,1.539,227,1.539,244,0.988,246,0.988,269,3.259,270,1.518,272,1.393,273,1.393,310,0.988,313,1.518,320,1.886,335,2.364,339,1.393,342,2.364,373,2.719,408,1.886,411,1.886,412,2.937,438,3.192,441,2.904,502,3.607,515,1.886,540,1.886,556,4.152,589,2.937,592,2.937,595,2.937,598,2.937,599,3.603,602,2.006,604,2.609,620,1.886,623,1.886,624,2.205,625,2.205,626,3.434,627,2.205,628,2.205,629,2.205,630,2.205,631,2.205,632,1.675,633,2.205,634,2.205,635,2.205,636,2.205,637,2.205,638,2.205,639,2.205,640,3.434,641,2.205,642,2.205,643,2.205,644,2.205,645,2.205,646,2.205,647,2.205,648,2.205,649,1.886,650,1.886,651,2.205]],["title/classes/LoginUserDto.html",[53,0.109,77,2.263]],["body/classes/LoginUserDto.html",[7,0.02,17,0.186,18,0.186,19,0.159,22,0.269,37,0.888,47,3.585,52,0.186,53,0.164,54,0.015,55,0.015,62,0.64,68,1.548,70,0.999,77,3.4,165,2.687,201,1.92,204,1.475,265,2.926,418,1.47,434,3.786,435,2.603,436,2.408,477,3.525,480,3.525,481,4.604,482,4.604,483,4.604,484,4.604,485,4.604,486,4.604,488,4.604,489,4.604,490,3.525,491,3.525,492,3.525,493,3.525,652,3.525,653,4.122,654,4.122]],["title/entities/Profile.html",[197,1.35,655,2.093]],["body/entities/Profile.html",[7,0.021,17,0.139,18,0.139,19,0.119,22,0.288,37,1.052,47,2.802,50,3.108,52,0.139,53,0.094,54,0.012,55,0.012,62,0.479,68,1.834,70,1.184,74,1.534,155,1.23,165,2.31,197,1.663,199,1.676,201,1.574,204,1.598,205,2.578,209,3.936,210,2.578,212,1.801,214,1.801,310,2.923,312,3.548,314,3.548,315,3.548,562,5.296,655,2.578,656,2.637,657,5.154,658,5.154,659,3.084,660,3.084,661,3.084,662,3.084,663,3.084,664,3.084,665,3.084,666,3.084,667,4.413,668,2.637]],["title/controllers/ProfileController.html",[56,1.21,669,2.467]],["body/controllers/ProfileController.html",[7,0.021,17,0.133,18,0.133,19,0.114,22,0.36,23,0.612,37,0.909,52,0.133,53,0.089,54,0.012,55,0.012,56,0.995,58,0.995,60,1.601,62,0.457,63,1.442,64,1.228,68,1.682,70,1.086,72,1.965,73,1.502,74,1.502,75,1.975,80,2.934,81,2.494,82,1.721,83,1.721,84,1.497,89,1.601,90,1.11,91,1.721,92,1.871,202,2.906,204,1.524,224,2.469,225,1.914,226,1.914,227,1.914,232,1.721,233,3.244,235,1.721,236,3.244,238,1.721,240,3.244,244,1.32,246,1.32,250,2.238,252,2.238,254,2.238,465,3.562,655,1.721,669,2.94,670,2.519,671,2.519,672,2.946,673,2.946,674,2.946,675,2.946,676,4.069,677,2.946,678,2.934,679,2.519,680,3.244,681,2.946,682,2.946,683,2.946,684,2.946,685,2.946,686,2.946]],["title/modules/ProfileModule.html",[0,1.147,12,2.263]],["body/modules/ProfileModule.html",[0,1.692,2,1.695,3,2.234,7,0.021,10,3.411,12,4.387,14,2.52,15,1.912,16,1.912,17,0.181,18,0.181,19,0.155,21,2.687,22,0.439,23,0.834,26,2.039,27,1.431,52,0.181,53,0.122,54,0.015,55,0.015,58,1.786,101,2.875,621,3.048,655,2.344,669,4.073,678,3.922,679,3.431,687,3.431,688,3.431,689,4.012,690,4.012,691,4.012,692,3.431,693,4.012]],["title/injectables/ProfileService.html",[127,1.087,678,2.093]],["body/injectables/ProfileService.html",[7,0.021,17,0.112,18,0.112,19,0.096,22,0.389,23,0.517,27,0.887,37,0.899,52,0.112,53,0.076,54,0.011,55,0.011,62,0.386,63,1.272,64,1.083,70,1.064,72,1.943,73,1.485,74,1.485,75,2.011,90,1.419,92,1.834,127,1.142,128,1.185,130,2.655,131,2.2,134,2.2,136,3.202,141,1.712,152,1.712,154,1.57,155,0.991,160,1.712,166,2.655,167,2.655,171,1.263,202,2.732,204,1.177,224,2.273,225,1.688,226,1.688,227,1.688,232,2.2,235,2.2,238,2.2,244,1.114,246,1.114,265,3.413,269,3.202,272,1.57,273,1.57,310,1.688,339,1.57,373,2.416,441,1.712,465,3.349,632,1.889,649,2.126,650,2.126,655,3.583,668,2.126,671,3.22,676,3.761,678,2.2,680,2.861,692,2.126,694,2.126,695,2.487,696,4.546,697,2.487,698,3.766,699,2.487,700,2.487,701,2.487,702,2.487,703,2.487,704,2.487,705,2.487,706,2.487,707,2.487,708,2.487,709,2.487,710,2.487,711,2.487,712,2.487]],["title/controllers/SeedController.html",[56,1.21,713,2.467]],["body/controllers/SeedController.html",[7,0.021,17,0.208,18,0.208,19,0.178,22,0.378,23,0.958,52,0.208,53,0.14,54,0.016,55,0.016,56,1.557,58,1.557,60,2.506,62,0.716,63,1.953,68,1.325,70,0.856,75,1.557,89,2.506,90,1.737,92,1.475,713,3.981,714,3.941,715,4.609,716,6.626,717,4.609,718,3.691,719,3.941,720,4.609,721,4.609]],["title/modules/SeedModule.html",[0,1.147,13,2.263]],["body/modules/SeedModule.html",[0,1.655,2,1.638,3,2.185,6,3.777,7,0.021,10,3.285,13,4.454,14,2.465,15,1.849,16,1.849,17,0.175,18,0.175,19,0.15,21,2.628,22,0.444,23,0.806,26,1.971,27,1.383,52,0.175,53,0.118,54,0.014,55,0.014,58,1.747,85,1.971,101,2.811,621,2.947,713,4.006,718,3.885,719,3.317,722,3.317,723,3.879,724,3.317,725,3.879,726,3.879,727,3.879,728,3.317,729,3.879]],["title/injectables/SeedService.html",[127,1.087,718,2.093]],["body/injectables/SeedService.html",[7,0.021,17,0.164,18,0.164,19,0.141,22,0.413,23,0.756,37,0.6,52,0.164,53,0.11,54,0.014,55,0.014,62,0.565,63,1.673,70,1.046,72,1.297,73,0.992,74,0.992,75,1.673,85,2.517,90,1.867,92,1.164,127,1.502,128,1.734,130,3.29,131,3.695,134,2.893,166,2.125,167,2.125,310,1.63,373,3.11,632,2.764,718,2.893,728,3.111,730,3.111,731,6.046,732,6.046,733,3.638,734,3.638,735,3.638,736,3.638,737,3.638,738,3.638,739,4.953,740,3.638,741,3.638,742,3.638,743,3.638,744,3.638,745,3.638,746,3.638,747,3.638,748,3.638,749,3.638,750,3.638]],["title/classes/UpdateAutoreDto.html",[53,0.109,239,2.263]],["body/classes/UpdateAutoreDto.html",[7,0.02,17,0.229,18,0.229,19,0.196,22,0.401,52,0.229,53,0.154,54,0.017,55,0.017,64,1.46,229,2.965,239,3.876,245,3.856,418,1.81,420,3.856,513,2.759,751,4.341,752,2.965,753,2.759,754,2.759,755,5.076]],["title/classes/UpdateCategoriaDto.html",[53,0.109,288,2.263]],["body/classes/UpdateCategoriaDto.html",[7,0.02,17,0.229,18,0.229,19,0.196,22,0.401,52,0.229,53,0.154,54,0.017,55,0.017,64,1.46,283,2.965,288,3.876,292,3.856,418,1.81,422,3.856,513,2.759,752,2.965,753,2.759,754,2.759,756,4.341,757,5.076]],["title/classes/UpdateClienteDto.html",[53,0.109,370,2.263]],["body/classes/UpdateClienteDto.html",[7,0.02,17,0.229,18,0.229,19,0.196,22,0.401,52,0.229,53,0.154,54,0.017,55,0.017,64,1.46,360,2.965,370,3.876,375,3.856,418,1.81,424,3.856,513,2.759,752,2.965,753,2.759,754,2.759,758,4.341,759,5.076]],["title/classes/UpdateLibroDto.html",[53,0.109,599,2.263]],["body/classes/UpdateLibroDto.html",[7,0.02,17,0.229,18,0.229,19,0.196,22,0.401,52,0.229,53,0.154,54,0.017,55,0.017,64,1.46,418,1.81,438,2.965,440,3.856,513,2.759,599,3.876,604,3.856,752,2.965,753,2.759,754,2.759,760,4.341,761,5.076]],["title/classes/UpdateProfileDto.html",[53,0.109,676,2.263]],["body/classes/UpdateProfileDto.html",[7,0.02,17,0.229,18,0.229,19,0.196,22,0.401,52,0.229,53,0.154,54,0.017,55,0.017,64,1.46,418,1.81,465,2.965,467,3.856,513,2.759,676,3.876,680,3.856,752,2.965,753,2.759,754,2.759,762,4.341,763,5.076]],["title/classes/UpdateUserDto.html",[53,0.109,764,2.722]],["body/classes/UpdateUserDto.html",[7,0.02,17,0.229,18,0.229,19,0.196,22,0.401,52,0.229,53,0.154,54,0.017,55,0.017,64,1.46,67,2.965,418,1.81,475,3.856,513,2.759,752,2.965,753,2.759,754,2.759,764,4.662,765,4.341,766,5.076,767,5.076]],["title/entities/User.html",[104,2.093,197,1.35]],["body/entities/User.html",[7,0.021,17,0.148,18,0.148,19,0.127,22,0.214,37,1.071,47,2.896,50,3.011,52,0.148,53,0.099,54,0.013,55,0.013,62,0.509,68,1.866,70,1.205,104,3.112,155,1.306,165,2.388,169,3.939,197,1.235,199,1.781,201,1.643,202,2.195,204,1.601,205,2.691,209,3.987,210,2.691,212,1.914,214,1.914,216,2.489,219,2.909,476,4.556,565,4.943,768,2.801,769,5.328,770,5.328,771,5.328,772,3.276,773,3.276,774,3.276,775,4.606,776,4.606,777,3.276,778,3.276,779,3.276,780,4.606,781,3.276,782,3.276,783,3.276]],["title/coverage.html",[784,4.192]],["body/coverage.html",[7,0.021,19,0.097,37,0.413,53,0.203,54,0.011,55,0.011,56,2.016,57,1.724,59,2.141,67,1.463,77,1.582,85,1.272,99,1.582,104,1.463,127,1.864,129,2.141,143,1.582,171,1.272,197,2.167,198,1.724,200,2.141,207,1.272,221,1.724,222,2.141,229,1.463,239,1.582,242,1.463,262,2.141,274,1.582,275,2.141,279,1.724,280,2.141,283,1.463,288,1.582,290,1.463,304,2.141,310,1.122,311,2.141,357,1.724,358,2.141,360,1.463,370,1.582,373,1.193,392,2.141,419,2.141,420,2.877,421,2.141,422,2.877,423,2.141,424,2.877,438,1.463,439,2.141,440,2.877,465,1.463,466,2.141,467,2.877,474,2.141,475,2.877,495,1.724,497,2.141,498,2.141,503,2.141,555,2.141,566,6.269,587,1.724,588,2.141,599,1.582,602,1.463,623,2.141,652,2.141,655,1.463,656,2.141,669,1.724,670,2.141,676,1.582,678,1.463,694,2.141,713,1.724,714,2.141,718,1.463,730,2.141,751,2.141,756,2.141,758,2.141,760,2.141,762,2.141,764,1.903,765,2.141,768,2.141,784,2.141,785,2.504,786,2.504,787,2.504,788,2.141,789,2.504,790,2.141,791,6.806,792,4.565,793,6.291,794,3.786,795,3.786,796,2.504,797,2.504,798,4.565,799,2.504,800,2.504]],["title/dependencies.html",[3,1.821,801,2.553]],["body/dependencies.html",[3,1.827,7,0.021,23,0.899,25,2.978,27,1.543,53,0.169,54,0.016,55,0.016,107,3.286,109,3.286,115,3.286,155,1.725,156,3.699,436,2.527,512,4.749,753,2.351,754,2.351,802,6.695,803,4.325,804,4.325,805,4.325,806,4.325,807,4.325,808,4.325,809,4.325,810,4.325,811,4.325,812,4.325,813,4.325,814,4.325,815,4.325,816,4.325,817,4.325,818,4.325,819,4.325,820,4.325,821,4.325,822,4.325,823,4.325,824,4.325]],["title/miscellaneous/functions.html",[825,2.553,826,3.688]],["body/miscellaneous/functions.html",[7,0.018,54,0.018,55,0.018,62,0.858,788,4.728,790,5.848,825,4.728,826,4.728,827,5.529]],["title/index.html",[62,0.464,828,2.986,829,2.986]],["body/index.html",[7,0.018,54,0.018,55,0.018,830,5.74]],["title/modules.html",[2,2.07]],["body/modules.html",[1,3.244,2,1.99,6,2.753,7,0.016,8,2.976,9,2.976,10,2.394,11,2.976,12,2.976,13,2.976,54,0.016,55,0.016,831,7.178,832,7.178,833,7.178,834,7.178]],["title/overview.html",[835,4.192]],["body/overview.html",[1,4.856,2,1.262,3,1.822,4,2.555,5,2.555,6,3.908,7,0.02,8,3.714,9,3.714,10,3.348,11,4.084,12,3.989,13,4.161,14,2.056,15,1.424,16,1.424,54,0.012,55,0.012,58,1.009,85,3.21,96,2.555,97,2.555,98,2.555,99,3.989,128,1.424,199,1.624,242,2.958,256,2.555,257,2.555,290,2.958,299,2.555,300,2.555,373,3.01,385,2.555,386,2.555,387,2.555,418,1.065,495,2.057,602,3.69,614,2.555,616,2.555,617,2.555,678,2.958,687,2.555,688,2.555,718,2.958,722,2.555,724,2.555,835,2.555,836,4.314,837,2.987,838,2.987,839,2.987,840,2.987]],["title/properties.html",[201,1.538,801,2.553]],["body/properties.html",[7,0.02,54,0.018,55,0.018,201,1.941,841,5.443,842,5.443,843,5.443,844,5.443,845,5.443,846,5.443]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Autor.html":{},"controllers/AutoresController.html":{},"modules/AutoresModule.html":{},"injectables/AutoresService.html":{},"entities/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"entities/Cliente.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CreateAutoreDto.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Libro.html":{},"controllers/LibrosController.html":{},"modules/LibrosModule.html":{},"injectables/LibrosService.html":{},"classes/LoginUserDto.html":{},"entities/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/SeedController.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"classes/UpdateAutoreDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateLibroDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":566,"title":{},"body":{"entities/Libro.html":{},"coverage.html":{}}}],["0.0.1",{"_index":842,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["0.3.10",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":840,"title":{},"body":{"overview.html":{}}}],["1.2.0",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["13",{"_index":839,"title":{},"body":{"overview.html":{}}}],["2.2.0",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["23505",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{}}}],["2h",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{}}}],["3.0.2",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":838,"title":{},"body":{"overview.html":{}}}],["7",{"_index":837,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":836,"title":{},"body":{"overview.html":{}}}],["8.8.0",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":269,"title":{},"body":{"injectables/AutoresService.html":{},"injectables/CategoriasService.html":{},"injectables/ClientesService.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{}}}],["activo",{"_index":536,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["adds",{"_index":270,"title":{},"body":{"injectables/AutoresService.html":{},"injectables/CategoriasService.html":{},"injectables/ClientesService.html":{},"injectables/LibrosService.html":{}}}],["al",{"_index":515,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LibrosService.html":{}}}],["antes",{"_index":634,"title":{},"body":{"injectables/LibrosService.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":780,"title":{},"body":{"entities/User.html":{}}}],["async",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{},"injectables/SeedService.html":{}}}],["auth",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["auth.controller",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":727,"title":{},"body":{"modules/SeedModule.html":{}}}],["auth/auth.service",{"_index":728,"title":{},"body":{"modules/SeedModule.html":{},"injectables/SeedService.html":{}}}],["authcontroller",{"_index":57,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SeedModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":846,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":578,"title":{},"body":{"entities/Libro.html":{}}}],["authservice",{"_index":85,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["autor",{"_index":198,"title":{"entities/Autor.html":{}},"body":{"entities/Autor.html":{},"modules/AutoresModule.html":{},"coverage.html":{}}}],["autore",{"_index":271,"title":{},"body":{"injectables/AutoresService.html":{}}}],["autore.dto",{"_index":245,"title":{},"body":{"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"classes/UpdateAutoreDto.html":{}}}],["autore.dto.ts",{"_index":420,"title":{},"body":{"classes/CreateAutoreDto.html":{},"classes/UpdateAutoreDto.html":{},"coverage.html":{}}}],["autores",{"_index":223,"title":{},"body":{"controllers/AutoresController.html":{},"injectables/AutoresService.html":{}}}],["autores.controller",{"_index":259,"title":{},"body":{"modules/AutoresModule.html":{}}}],["autores.service",{"_index":243,"title":{},"body":{"controllers/AutoresController.html":{},"modules/AutoresModule.html":{}}}],["autorescontroller",{"_index":221,"title":{"controllers/AutoresController.html":{}},"body":{"controllers/AutoresController.html":{},"modules/AutoresModule.html":{},"coverage.html":{}}}],["autoresmodule",{"_index":8,"title":{"modules/AutoresModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AutoresModule.html":{},"modules.html":{},"overview.html":{}}}],["autoresservice",{"_index":242,"title":{"injectables/AutoresService.html":{}},"body":{"controllers/AutoresController.html":{},"modules/AutoresModule.html":{},"injectables/AutoresService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{},"injectables/SeedService.html":{}}}],["añade",{"_index":541,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["añadir",{"_index":501,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["badrequestexception",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{}}}],["badrequestexception(error.detail",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{}}}],["bcrypt",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.comparesync",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hashsync",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["bd",{"_index":650,"title":{},"body":{"injectables/LibrosService.html":{},"injectables/ProfileService.html":{}}}],["bearer",{"_index":529,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["beforeinsert",{"_index":326,"title":{},"body":{"entities/Cliente.html":{},"entities/Libro.html":{}}}],["body",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoresController.html":{},"controllers/CategoriasController.html":{},"controllers/ClientesController.html":{},"controllers/LibrosController.html":{},"controllers/ProfileController.html":{}}}],["books",{"_index":329,"title":{},"body":{"entities/Cliente.html":{}}}],["boolean",{"_index":775,"title":{},"body":{"entities/User.html":{}}}],["bootstrap",{"_index":790,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":834,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":831,"title":{},"body":{"modules.html":{}}}],["buscamos",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["campos",{"_index":502,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/LibrosService.html":{}}}],["camposprofile",{"_index":706,"title":{},"body":{"injectables/ProfileService.html":{}}}],["cascada",{"_index":340,"title":{},"body":{"entities/Cliente.html":{}}}],["cascade",{"_index":218,"title":{},"body":{"entities/Autor.html":{},"entities/Categoria.html":{},"entities/Cliente.html":{},"entities/Libro.html":{}}}],["caso",{"_index":346,"title":{},"body":{"entities/Cliente.html":{}}}],["catch",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{},"injectables/LibrosService.html":{}}}],["catch(error",{"_index":712,"title":{},"body":{"injectables/ProfileService.html":{}}}],["categoria",{"_index":274,"title":{"entities/Categoria.html":{}},"body":{"entities/Categoria.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"coverage.html":{}}}],["categoria.dto",{"_index":292,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"classes/UpdateCategoriaDto.html":{}}}],["categoria.dto.ts",{"_index":422,"title":{},"body":{"classes/CreateCategoriaDto.html":{},"classes/UpdateCategoriaDto.html":{},"coverage.html":{}}}],["categorias",{"_index":281,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["categorias.controller",{"_index":302,"title":{},"body":{"modules/CategoriasModule.html":{}}}],["categorias.service",{"_index":291,"title":{},"body":{"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{}}}],["categoriascontroller",{"_index":279,"title":{"controllers/CategoriasController.html":{}},"body":{"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"coverage.html":{}}}],["categoriasmodule",{"_index":9,"title":{"modules/CategoriasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriasModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriasservice",{"_index":290,"title":{"injectables/CategoriasService.html":{}},"body":{"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{}}}],["checktitleinsert",{"_index":584,"title":{},"body":{"entities/Libro.html":{}}}],["checkurlinsert",{"_index":347,"title":{},"body":{"entities/Cliente.html":{}}}],["class",{"_index":53,"title":{"classes/CreateAutoreDto.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateAutoreDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateLibroDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Autor.html":{},"controllers/AutoresController.html":{},"modules/AutoresModule.html":{},"injectables/AutoresService.html":{},"entities/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"entities/Cliente.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CreateAutoreDto.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"entities/Libro.html":{},"controllers/LibrosController.html":{},"modules/LibrosModule.html":{},"injectables/LibrosService.html":{},"classes/LoginUserDto.html":{},"entities/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/SeedController.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"classes/UpdateAutoreDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateLibroDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":418,"title":{},"body":{"classes/CreateAutoreDto.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateAutoreDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateLibroDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["cliente",{"_index":310,"title":{"entities/Cliente.html":{}},"body":{"entities/Cliente.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"entities/Libro.html":{},"injectables/LibrosService.html":{},"entities/Profile.html":{},"injectables/ProfileService.html":{},"injectables/SeedService.html":{},"coverage.html":{}}}],["cliente.dto",{"_index":375,"title":{},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/UpdateClienteDto.html":{}}}],["cliente.dto.ts",{"_index":424,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{},"coverage.html":{}}}],["cliente.dto.ts:10",{"_index":426,"title":{},"body":{"classes/CreateClienteDto.html":{}}}],["cliente.dto.ts:15",{"_index":431,"title":{},"body":{"classes/CreateClienteDto.html":{}}}],["cliente.dto.ts:20",{"_index":428,"title":{},"body":{"classes/CreateClienteDto.html":{}}}],["cliente.dto.ts:25",{"_index":430,"title":{},"body":{"classes/CreateClienteDto.html":{}}}],["cliente.dto.ts:6",{"_index":429,"title":{},"body":{"classes/CreateClienteDto.html":{}}}],["cliente.libros",{"_index":558,"title":{},"body":{"entities/Libro.html":{}}}],["cliente.profile",{"_index":668,"title":{},"body":{"entities/Profile.html":{},"injectables/ProfileService.html":{}}}],["clienterepository",{"_index":396,"title":{},"body":{"injectables/ClientesService.html":{}}}],["clientes",{"_index":327,"title":{},"body":{"entities/Cliente.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{}}}],["clientes.controller",{"_index":389,"title":{},"body":{"modules/ClientesModule.html":{}}}],["clientes.json",{"_index":741,"title":{},"body":{"injectables/SeedService.html":{}}}],["clientes.service",{"_index":374,"title":{},"body":{"controllers/ClientesController.html":{},"modules/ClientesModule.html":{}}}],["clientes/clientes.module",{"_index":621,"title":{},"body":{"modules/LibrosModule.html":{},"modules/ProfileModule.html":{},"modules/SeedModule.html":{}}}],["clientes/clientes.service",{"_index":632,"title":{},"body":{"injectables/LibrosService.html":{},"injectables/ProfileService.html":{},"injectables/SeedService.html":{}}}],["clientes/entities/cliente.entity",{"_index":576,"title":{},"body":{"entities/Libro.html":{}}}],["clientescontroller",{"_index":357,"title":{"controllers/ClientesController.html":{}},"body":{"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"coverage.html":{}}}],["clienteservice",{"_index":696,"title":{},"body":{"injectables/ProfileService.html":{}}}],["clientesmodule",{"_index":10,"title":{"modules/ClientesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientesModule.html":{},"modules/LibrosModule.html":{},"modules/ProfileModule.html":{},"modules/SeedModule.html":{},"modules.html":{},"overview.html":{}}}],["clientesmodule,authmodule",{"_index":729,"title":{},"body":{"modules/SeedModule.html":{}}}],["clientesservice",{"_index":373,"title":{"injectables/ClientesService.html":{}},"body":{"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{},"injectables/SeedService.html":{},"coverage.html":{},"overview.html":{}}}],["clients",{"_index":579,"title":{},"body":{"entities/Libro.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_autoresmodule",{"_index":256,"title":{},"body":{"modules/AutoresModule.html":{},"overview.html":{}}}],["cluster_autoresmodule_providers",{"_index":257,"title":{},"body":{"modules/AutoresModule.html":{},"overview.html":{}}}],["cluster_categoriasmodule",{"_index":299,"title":{},"body":{"modules/CategoriasModule.html":{},"overview.html":{}}}],["cluster_categoriasmodule_providers",{"_index":300,"title":{},"body":{"modules/CategoriasModule.html":{},"overview.html":{}}}],["cluster_clientesmodule",{"_index":385,"title":{},"body":{"modules/ClientesModule.html":{},"overview.html":{}}}],["cluster_clientesmodule_exports",{"_index":386,"title":{},"body":{"modules/ClientesModule.html":{},"overview.html":{}}}],["cluster_clientesmodule_providers",{"_index":387,"title":{},"body":{"modules/ClientesModule.html":{},"overview.html":{}}}],["cluster_librosmodule",{"_index":614,"title":{},"body":{"modules/LibrosModule.html":{},"overview.html":{}}}],["cluster_librosmodule_exports",{"_index":616,"title":{},"body":{"modules/LibrosModule.html":{},"overview.html":{}}}],["cluster_librosmodule_imports",{"_index":615,"title":{},"body":{"modules/LibrosModule.html":{}}}],["cluster_librosmodule_providers",{"_index":617,"title":{},"body":{"modules/LibrosModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":687,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":689,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":688,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_seedmodule",{"_index":722,"title":{},"body":{"modules/SeedModule.html":{},"overview.html":{}}}],["cluster_seedmodule_imports",{"_index":723,"title":{},"body":{"modules/SeedModule.html":{}}}],["cluster_seedmodule_providers",{"_index":724,"title":{},"body":{"modules/SeedModule.html":{},"overview.html":{}}}],["column",{"_index":212,"title":{},"body":{"entities/Autor.html":{},"entities/Categoria.html":{},"entities/Cliente.html":{},"entities/Libro.html":{},"entities/Profile.html":{},"entities/User.html":{}}}],["column('bool",{"_index":776,"title":{},"body":{"entities/User.html":{}}}],["column('integer",{"_index":564,"title":{},"body":{"entities/Libro.html":{}}}],["column('text",{"_index":209,"title":{},"body":{"entities/Autor.html":{},"entities/Categoria.html":{},"entities/Cliente.html":{},"entities/Libro.html":{},"entities/Profile.html":{},"entities/User.html":{}}}],["column({type",{"_index":568,"title":{},"body":{"entities/Libro.html":{}}}],["como",{"_index":522,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["comparamos",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["con",{"_index":337,"title":{},"body":{"entities/Cliente.html":{}}}],["configmodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('jwt_secret",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["console.log",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LibrosService.html":{}}}],["console.log(cliente",{"_index":406,"title":{},"body":{"injectables/ClientesService.html":{}}}],["console.log(createprofiledto",{"_index":705,"title":{},"body":{"injectables/ProfileService.html":{}}}],["console.log(error",{"_index":408,"title":{},"body":{"injectables/ClientesService.html":{},"injectables/LibrosService.html":{}}}],["const",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{},"injectables/SeedService.html":{}}}],["constructor",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{},"injectables/SeedService.html":{}}}],["constructor(clienterepository",{"_index":394,"title":{},"body":{"injectables/ClientesService.html":{}}}],["constructor(clientesservice",{"_index":733,"title":{},"body":{"injectables/SeedService.html":{}}}],["constructor(librorepository",{"_index":624,"title":{},"body":{"injectables/LibrosService.html":{}}}],["constructor(private",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoresController.html":{},"controllers/CategoriasController.html":{},"controllers/ClientesController.html":{},"controllers/LibrosController.html":{},"controllers/ProfileController.html":{},"controllers/SeedController.html":{}}}],["constructor(profilerepositorio",{"_index":695,"title":{},"body":{"injectables/ProfileService.html":{}}}],["constructor(userrepository",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["consulta",{"_index":638,"title":{},"body":{"injectables/LibrosService.html":{}}}],["contraseñas",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":56,"title":{"controllers/AuthController.html":{},"controllers/AutoresController.html":{},"controllers/CategoriasController.html":{},"controllers/ClientesController.html":{},"controllers/LibrosController.html":{},"controllers/ProfileController.html":{},"controllers/SeedController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/AutoresController.html":{},"controllers/CategoriasController.html":{},"controllers/ClientesController.html":{},"controllers/LibrosController.html":{},"controllers/ProfileController.html":{},"controllers/SeedController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('autores",{"_index":247,"title":{},"body":{"controllers/AutoresController.html":{}}}],["controller('categorias",{"_index":293,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["controller('clientes",{"_index":376,"title":{},"body":{"controllers/ClientesController.html":{}}}],["controller('libros",{"_index":605,"title":{},"body":{"controllers/LibrosController.html":{}}}],["controller('profile",{"_index":681,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('seed",{"_index":720,"title":{},"body":{"controllers/SeedController.html":{}}}],["controllers",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/AutoresController.html":{},"modules/AutoresModule.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"controllers/LibrosController.html":{},"modules/LibrosModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/SeedController.html":{},"modules/SeedModule.html":{},"overview.html":{}}}],["coverage",{"_index":784,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateAutoreDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateLibroDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{}}}],["create(@body",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoresController.html":{},"controllers/CategoriasController.html":{},"controllers/ClientesController.html":{},"controllers/LibrosController.html":{},"controllers/ProfileController.html":{}}}],["create(createautoredto",{"_index":228,"title":{},"body":{"controllers/AutoresController.html":{},"injectables/AutoresService.html":{}}}],["create(createcategoriadto",{"_index":282,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["create(createclientedto",{"_index":359,"title":{},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{}}}],["create(createlibrodto",{"_index":589,"title":{},"body":{"controllers/LibrosController.html":{},"injectables/LibrosService.html":{}}}],["create(createprofiledto",{"_index":671,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["create(createuserdto",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["createautoredto",{"_index":229,"title":{"classes/CreateAutoreDto.html":{}},"body":{"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"classes/CreateAutoreDto.html":{},"classes/UpdateAutoreDto.html":{},"coverage.html":{}}}],["createcategoriadto",{"_index":283,"title":{"classes/CreateCategoriaDto.html":{}},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"classes/CreateCategoriaDto.html":{},"classes/UpdateCategoriaDto.html":{},"coverage.html":{}}}],["createclientedto",{"_index":360,"title":{"classes/CreateClienteDto.html":{}},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{},"coverage.html":{}}}],["createlibrodto",{"_index":438,"title":{"classes/CreateLibroDto.html":{}},"body":{"classes/CreateLibroDto.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"classes/UpdateLibroDto.html":{},"coverage.html":{}}}],["createlibrodto.idcliente",{"_index":639,"title":{},"body":{"injectables/LibrosService.html":{}}}],["createprofiledto",{"_index":465,"title":{"classes/CreateProfileDto.html":{}},"body":{"classes/CreateProfileDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":67,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["credenciales",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":493,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["data",{"_index":582,"title":{},"body":{"entities/Libro.html":{}}}],["database",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["dataclientes",{"_index":739,"title":{},"body":{"injectables/SeedService.html":{}}}],["dataclientes.foreach",{"_index":748,"title":{},"body":{"injectables/SeedService.html":{}}}],["datausers",{"_index":737,"title":{},"body":{"injectables/SeedService.html":{}}}],["de",{"_index":342,"title":{},"body":{"entities/Cliente.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LibrosService.html":{}}}],["decoradores",{"_index":550,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["decorators",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"entities/Autor.html":{},"controllers/AutoresController.html":{},"entities/Categoria.html":{},"controllers/CategoriasController.html":{},"entities/Cliente.html":{},"controllers/ClientesController.html":{},"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"entities/Libro.html":{},"controllers/LibrosController.html":{},"classes/LoginUserDto.html":{},"entities/Profile.html":{},"controllers/ProfileController.html":{},"controllers/SeedController.html":{},"entities/User.html":{}}}],["default",{"_index":565,"title":{},"body":{"entities/Libro.html":{},"entities/User.html":{}}}],["defaultstrategy",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Autor.html":{},"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"entities/Categoria.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"entities/Cliente.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"entities/Libro.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"classes/LoginUserDto.html":{},"entities/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/SeedController.html":{},"injectables/SeedService.html":{},"entities/User.html":{}}}],["definir",{"_index":581,"title":{},"body":{"entities/Libro.html":{}}}],["del",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["delete",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AutoresController.html":{},"controllers/CategoriasController.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/LibrosController.html":{},"controllers/ProfileController.html":{}}}],["delete(':id",{"_index":236,"title":{},"body":{"controllers/AutoresController.html":{},"controllers/CategoriasController.html":{},"controllers/ProfileController.html":{}}}],["delete(':idc",{"_index":367,"title":{},"body":{"controllers/ClientesController.html":{}}}],["delete(':idl",{"_index":596,"title":{},"body":{"controllers/LibrosController.html":{}}}],["deleteallclientes",{"_index":393,"title":{},"body":{"injectables/ClientesService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoresModule.html":{},"modules/CategoriasModule.html":{},"modules/ClientesModule.html":{},"modules/LibrosModule.html":{},"modules/ProfileModule.html":{},"modules/SeedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":843,"title":{},"body":{"properties.html":{}}}],["despues",{"_index":411,"title":{},"body":{"injectables/ClientesService.html":{},"injectables/LibrosService.html":{}}}],["disponible",{"_index":543,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["documentation",{"_index":785,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/create",{"_index":244,"title":{},"body":{"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["dto/update",{"_index":246,"title":{},"body":{"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["eager",{"_index":321,"title":{},"body":{"entities/Cliente.html":{}}}],["el",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["eliminación",{"_index":338,"title":{},"body":{"entities/Cliente.html":{}}}],["email",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"entities/Cliente.html":{},"classes/CreateClienteDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"entities/Profile.html":{},"entities/User.html":{}}}],["email:string",{"_index":499,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["en",{"_index":339,"title":{},"body":{"entities/Cliente.html":{},"injectables/JwtStrategy.html":{},"entities/Libro.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{}}}],["entities",{"_index":199,"title":{},"body":{"entities/Autor.html":{},"entities/Categoria.html":{},"entities/Cliente.html":{},"entities/Libro.html":{},"entities/Profile.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/autor.entity",{"_index":260,"title":{},"body":{"modules/AutoresModule.html":{}}}],["entities/categoria.entity",{"_index":303,"title":{},"body":{"modules/CategoriasModule.html":{}}}],["entities/cliente.entity",{"_index":390,"title":{},"body":{"modules/ClientesModule.html":{},"injectables/ClientesService.html":{}}}],["entities/libro.entity",{"_index":620,"title":{},"body":{"modules/LibrosModule.html":{},"injectables/LibrosService.html":{}}}],["entities/profile.entity",{"_index":692,"title":{},"body":{"modules/ProfileModule.html":{},"injectables/ProfileService.html":{}}}],["entities/user.entity",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["entity",{"_index":197,"title":{"entities/Autor.html":{},"entities/Categoria.html":{},"entities/Cliente.html":{},"entities/Libro.html":{},"entities/Profile.html":{},"entities/User.html":{}},"body":{"entities/Autor.html":{},"entities/Categoria.html":{},"entities/Cliente.html":{},"entities/Libro.html":{},"entities/Profile.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity('users",{"_index":783,"title":{},"body":{"entities/User.html":{}}}],["error",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{},"injectables/LibrosService.html":{}}}],["error.code",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{}}}],["esperar",{"_index":645,"title":{},"body":{"injectables/LibrosService.html":{}}}],["esta",{"_index":343,"title":{},"body":{"entities/Cliente.html":{},"injectables/JwtStrategy.html":{}}}],["establecer",{"_index":334,"title":{},"body":{"entities/Cliente.html":{}}}],["estára",{"_index":542,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["excuteseed",{"_index":716,"title":{},"body":{"controllers/SeedController.html":{}}}],["execute",{"_index":417,"title":{},"body":{"injectables/ClientesService.html":{}}}],["existe",{"_index":534,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiresin",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Autor.html":{},"controllers/AutoresController.html":{},"modules/AutoresModule.html":{},"injectables/AutoresService.html":{},"entities/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"entities/Cliente.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CreateAutoreDto.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Libro.html":{},"controllers/LibrosController.html":{},"modules/LibrosModule.html":{},"injectables/LibrosService.html":{},"classes/LoginUserDto.html":{},"entities/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/SeedController.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"classes/UpdateAutoreDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateLibroDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["exports",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{},"modules/ClientesModule.html":{},"modules/LibrosModule.html":{}}}],["express",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":513,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/UpdateAutoreDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateLibroDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":510,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":520,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extraer",{"_index":553,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":219,"title":{},"body":{"entities/Autor.html":{},"entities/Categoria.html":{},"entities/Cliente.html":{},"entities/Libro.html":{},"entities/User.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Autor.html":{},"controllers/AutoresController.html":{},"modules/AutoresModule.html":{},"injectables/AutoresService.html":{},"entities/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"entities/Cliente.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CreateAutoreDto.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Libro.html":{},"controllers/LibrosController.html":{},"modules/LibrosModule.html":{},"injectables/LibrosService.html":{},"classes/LoginUserDto.html":{},"entities/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/SeedController.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"classes/UpdateAutoreDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateLibroDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"coverage.html":{}}}],["findall",{"_index":224,"title":{},"body":{"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["findone",{"_index":225,"title":{},"body":{"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["findone(@param('id",{"_index":250,"title":{},"body":{"controllers/AutoresController.html":{},"controllers/CategoriasController.html":{},"controllers/ProfileController.html":{}}}],["findone(@param('idc",{"_index":379,"title":{},"body":{"controllers/ClientesController.html":{}}}],["findone(@param('idl",{"_index":608,"title":{},"body":{"controllers/LibrosController.html":{}}}],["findone(id",{"_index":232,"title":{},"body":{"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["findone(idc",{"_index":363,"title":{},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{}}}],["findone(idl",{"_index":592,"title":{},"body":{"controllers/LibrosController.html":{},"injectables/LibrosService.html":{}}}],["fullname",{"_index":476,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["fullname:string",{"_index":494,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["function",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":826,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":233,"title":{},"body":{"controllers/AutoresController.html":{},"controllers/CategoriasController.html":{},"controllers/ProfileController.html":{}}}],["get(':idc",{"_index":364,"title":{},"body":{"controllers/ClientesController.html":{}}}],["get(':idl",{"_index":593,"title":{},"body":{"controllers/LibrosController.html":{}}}],["getjwttoken",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["getjwttoken(payload",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["getting",{"_index":828,"title":{"index.html":{}},"body":{}}],["github",{"_index":312,"title":{},"body":{"entities/Cliente.html":{},"classes/CreateClienteDto.html":{},"classes/CreateProfileDto.html":{},"entities/Profile.html":{}}}],["haciéndolo",{"_index":341,"title":{},"body":{"entities/Cliente.html":{}}}],["handledberrors",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{}}}],["handledberrors(error",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{}}}],["hola",{"_index":830,"title":{},"body":{"index.html":{}}}],["host",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["https://${this.website",{"_index":350,"title":{},"body":{"entities/Cliente.html":{}}}],["https://github.com/${this.github",{"_index":353,"title":{},"body":{"entities/Cliente.html":{}}}],["https://twitter.com/${this.twitter",{"_index":356,"title":{},"body":{"entities/Cliente.html":{}}}],["id",{"_index":202,"title":{},"body":{"entities/Autor.html":{},"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"entities/Categoria.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"entities/User.html":{}}}],["id:string",{"_index":216,"title":{},"body":{"entities/Autor.html":{},"entities/Categoria.html":{},"entities/User.html":{}}}],["idc",{"_index":313,"title":{},"body":{"entities/Cliente.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"injectables/LibrosService.html":{}}}],["idcliente",{"_index":441,"title":{},"body":{"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{}}}],["identifier",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["idl",{"_index":556,"title":{},"body":{"entities/Libro.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{}}}],["import",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Autor.html":{},"controllers/AutoresController.html":{},"modules/AutoresModule.html":{},"injectables/AutoresService.html":{},"entities/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"entities/Cliente.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"entities/Libro.html":{},"controllers/LibrosController.html":{},"modules/LibrosModule.html":{},"injectables/LibrosService.html":{},"classes/LoginUserDto.html":{},"entities/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/SeedController.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"classes/UpdateAutoreDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateLibroDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["imports",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoresModule.html":{},"modules/CategoriasModule.html":{},"modules/ClientesModule.html":{},"modules/LibrosModule.html":{},"modules/ProfileModule.html":{},"modules/SeedModule.html":{}}}],["index",{"_index":62,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Autor.html":{},"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"entities/Categoria.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"entities/Cliente.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Libro.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"classes/LoginUserDto.html":{},"entities/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/SeedController.html":{},"injectables/SeedService.html":{},"entities/User.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Autor.html":{},"controllers/AutoresController.html":{},"modules/AutoresModule.html":{},"injectables/AutoresService.html":{},"entities/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"entities/Cliente.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CreateAutoreDto.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Libro.html":{},"controllers/LibrosController.html":{},"modules/LibrosModule.html":{},"injectables/LibrosService.html":{},"classes/LoginUserDto.html":{},"entities/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/SeedController.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"classes/UpdateAutoreDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateLibroDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["inject",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{}}}],["injectable",{"_index":127,"title":{"injectables/AuthService.html":{},"injectables/AutoresService.html":{},"injectables/CategoriasService.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{},"injectables/SeedService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AutoresService.html":{},"injectables/CategoriasService.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{},"injectables/SeedService.html":{},"coverage.html":{}}}],["injectables",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AutoresService.html":{},"injectables/CategoriasService.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{},"injectables/SeedService.html":{},"overview.html":{}}}],["injectrepository",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{}}}],["injectrepository(cliente",{"_index":404,"title":{},"body":{"injectables/ClientesService.html":{}}}],["injectrepository(libro",{"_index":633,"title":{},"body":{"injectables/LibrosService.html":{}}}],["injectrepository(profile",{"_index":704,"title":{},"body":{"injectables/ProfileService.html":{}}}],["injectrepository(user",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["insertnewclientes",{"_index":731,"title":{},"body":{"injectables/SeedService.html":{}}}],["insertpromises",{"_index":747,"title":{},"body":{"injectables/SeedService.html":{}}}],["insertpromises.push(this.clientesservice.create(cliente",{"_index":749,"title":{},"body":{"injectables/SeedService.html":{}}}],["interface",{"_index":495,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":496,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["interfaces/jwt",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["internalservererrorexception",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{}}}],["internalservererrorexception('ayuda",{"_index":409,"title":{},"body":{"injectables/ClientesService.html":{}}}],["internalservererrorexception('error",{"_index":649,"title":{},"body":{"injectables/LibrosService.html":{},"injectables/ProfileService.html":{}}}],["internalservererrorexception('please",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{}}}],["isactive",{"_index":769,"title":{},"body":{"entities/User.html":{}}}],["isarray",{"_index":432,"title":{},"body":{"classes/CreateClienteDto.html":{}}}],["isbn",{"_index":442,"title":{},"body":{"classes/CreateLibroDto.html":{},"entities/Libro.html":{}}}],["isemail",{"_index":488,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["isin",{"_index":462,"title":{},"body":{"classes/CreateLibroDto.html":{}}}],["isin(['publish",{"_index":464,"title":{},"body":{"classes/CreateLibroDto.html":{}}}],["isnumber",{"_index":463,"title":{},"body":{"classes/CreateLibroDto.html":{}}}],["isnumber()@isoptional",{"_index":453,"title":{},"body":{"classes/CreateLibroDto.html":{}}}],["isoptional",{"_index":433,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{}}}],["isstring",{"_index":434,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["isstring()@isemail",{"_index":477,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["isstring()@minlength(1",{"_index":425,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@minlength(1)@isoptional",{"_index":427,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{}}}],["isstring()@minlength(1)@isoptional()@isin(['publish",{"_index":457,"title":{},"body":{"classes/CreateLibroDto.html":{}}}],["isstring()@minlength(6)@maxlength(50)@matches(/(?:(?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":480,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["joincolumn",{"_index":658,"title":{},"body":{"entities/Profile.html":{}}}],["jwt",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":519,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":143,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":99,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["la",{"_index":335,"title":{},"body":{"entities/Cliente.html":{},"injectables/JwtStrategy.html":{},"entities/Libro.html":{},"injectables/LibrosService.html":{}}}],["lados",{"_index":546,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["lanza",{"_index":642,"title":{},"body":{"injectables/LibrosService.html":{}}}],["las",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["letter",{"_index":486,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["libro",{"_index":207,"title":{"entities/Libro.html":{}},"body":{"entities/Autor.html":{},"entities/Categoria.html":{},"entities/Cliente.html":{},"entities/Libro.html":{},"modules/LibrosModule.html":{},"injectables/LibrosService.html":{},"coverage.html":{}}}],["libro.autor",{"_index":217,"title":{},"body":{"entities/Autor.html":{}}}],["libro.categoria",{"_index":278,"title":{},"body":{"entities/Categoria.html":{}}}],["libro.cliente",{"_index":320,"title":{},"body":{"entities/Cliente.html":{},"injectables/LibrosService.html":{}}}],["libro.dto",{"_index":604,"title":{},"body":{"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"classes/UpdateLibroDto.html":{}}}],["libro.dto.ts",{"_index":440,"title":{},"body":{"classes/CreateLibroDto.html":{},"classes/UpdateLibroDto.html":{},"coverage.html":{}}}],["libro.dto.ts:10",{"_index":451,"title":{},"body":{"classes/CreateLibroDto.html":{}}}],["libro.dto.ts:14",{"_index":454,"title":{},"body":{"classes/CreateLibroDto.html":{}}}],["libro.dto.ts:19",{"_index":455,"title":{},"body":{"classes/CreateLibroDto.html":{}}}],["libro.dto.ts:24",{"_index":460,"title":{},"body":{"classes/CreateLibroDto.html":{}}}],["libro.dto.ts:29",{"_index":456,"title":{},"body":{"classes/CreateLibroDto.html":{}}}],["libro.dto.ts:34",{"_index":452,"title":{},"body":{"classes/CreateLibroDto.html":{}}}],["libro.dto.ts:40",{"_index":459,"title":{},"body":{"classes/CreateLibroDto.html":{}}}],["libro.dto.ts:43",{"_index":450,"title":{},"body":{"classes/CreateLibroDto.html":{}}}],["libro.dto.ts:6",{"_index":461,"title":{},"body":{"classes/CreateLibroDto.html":{}}}],["librorepository",{"_index":626,"title":{},"body":{"injectables/LibrosService.html":{}}}],["libros",{"_index":203,"title":{},"body":{"entities/Autor.html":{},"entities/Cliente.html":{},"injectables/ClientesService.html":{},"entities/Libro.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{}}}],["libros.controller",{"_index":619,"title":{},"body":{"modules/LibrosModule.html":{}}}],["libros.service",{"_index":603,"title":{},"body":{"controllers/LibrosController.html":{},"modules/LibrosModule.html":{}}}],["libros/entities/libro.entity",{"_index":215,"title":{},"body":{"entities/Autor.html":{},"entities/Categoria.html":{},"entities/Cliente.html":{}}}],["libros?:libro",{"_index":220,"title":{},"body":{"entities/Autor.html":{},"entities/Categoria.html":{}}}],["libroscontroller",{"_index":587,"title":{"controllers/LibrosController.html":{}},"body":{"controllers/LibrosController.html":{},"modules/LibrosModule.html":{},"coverage.html":{}}}],["librosmodule",{"_index":11,"title":{"modules/LibrosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LibrosModule.html":{},"modules.html":{},"overview.html":{}}}],["librosservice",{"_index":602,"title":{"injectables/LibrosService.html":{}},"body":{"controllers/LibrosController.html":{},"modules/LibrosModule.html":{},"injectables/LibrosService.html":{},"coverage.html":{},"overview.html":{}}}],["license",{"_index":844,"title":{},"body":{"properties.html":{}}}],["llamamos",{"_index":514,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["lo",{"_index":330,"title":{},"body":{"entities/Cliente.html":{},"injectables/JwtStrategy.html":{}}}],["login",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(loginuserdto",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["loginuserdto",{"_index":77,"title":{"classes/LoginUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginUserDto.html":{},"coverage.html":{}}}],["longdescription",{"_index":443,"title":{},"body":{"classes/CreateLibroDto.html":{},"entities/Libro.html":{}}}],["los",{"_index":545,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["lowercase",{"_index":485,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["mandamos",{"_index":521,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["manera",{"_index":344,"title":{},"body":{"entities/Cliente.html":{}}}],["manytoone",{"_index":575,"title":{},"body":{"entities/Libro.html":{}}}],["manytoone(undefined",{"_index":557,"title":{},"body":{"entities/Libro.html":{}}}],["mas",{"_index":331,"title":{},"body":{"entities/Cliente.html":{},"interfaces/JwtPayload.html":{}}}],["matches",{"_index":489,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["matching",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Autor.html":{},"controllers/AutoresController.html":{},"modules/AutoresModule.html":{},"injectables/AutoresService.html":{},"entities/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"entities/Cliente.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CreateAutoreDto.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Libro.html":{},"controllers/LibrosController.html":{},"modules/LibrosModule.html":{},"injectables/LibrosService.html":{},"classes/LoginUserDto.html":{},"entities/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/SeedController.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"classes/UpdateAutoreDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateLibroDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["maxlength",{"_index":490,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["maxlength(50",{"_index":492,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["message",{"_index":483,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["metadata",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/SeedController.html":{},"injectables/SeedService.html":{}}}],["minlength",{"_index":435,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["minlength(1",{"_index":437,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":491,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["miscellaneous",{"_index":825,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoresModule.html":{},"modules/CategoriasModule.html":{},"modules/ClientesModule.html":{},"modules/LibrosModule.html":{},"modules/ProfileModule.html":{},"modules/SeedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoresModule.html":{},"modules/CategoriasModule.html":{},"modules/ClientesModule.html":{},"modules/LibrosModule.html":{},"modules/ProfileModule.html":{},"modules/SeedModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoresModule.html":{},"modules/CategoriasModule.html":{},"modules/ClientesModule.html":{},"modules/LibrosModule.html":{},"modules/ProfileModule.html":{},"modules/SeedModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/auth.module",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/autores/autores.module",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/categorias/categorias.module",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/clientes/clientes.module",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/libros/libros.module",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/profile/profile.module",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/seed/seed.module",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Autor.html":{},"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"entities/Categoria.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"entities/Cliente.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/CreateClienteDto.html":{},"injectables/JwtStrategy.html":{},"entities/Libro.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SeedService.html":{}}}],["nestjs/common",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AutoresController.html":{},"modules/AutoresModule.html":{},"injectables/AutoresService.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"controllers/LibrosController.html":{},"modules/LibrosModule.html":{},"injectables/LibrosService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/SeedController.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":753,"title":{},"body":{"classes/UpdateAutoreDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateLibroDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AutoresModule.html":{},"modules/CategoriasModule.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"modules/LibrosModule.html":{},"injectables/LibrosService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/SeedModule.html":{},"dependencies.html":{}}}],["never",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{}}}],["new",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AutoresService.html":{},"injectables/CategoriasService.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["nuestro",{"_index":345,"title":{},"body":{"entities/Cliente.html":{}}}],["nullable",{"_index":562,"title":{},"body":{"entities/Libro.html":{},"entities/Profile.html":{}}}],["number",{"_index":265,"title":{},"body":{"injectables/AutoresService.html":{},"injectables/CategoriasService.html":{},"classes/CreateLibroDto.html":{},"classes/CreateUserDto.html":{},"entities/Libro.html":{},"classes/LoginUserDto.html":{},"injectables/ProfileService.html":{}}}],["ondelete",{"_index":583,"title":{},"body":{"entities/Libro.html":{}}}],["onetomany",{"_index":213,"title":{},"body":{"entities/Autor.html":{},"entities/Categoria.html":{},"entities/Cliente.html":{}}}],["onetomany(undefined",{"_index":319,"title":{},"body":{"entities/Cliente.html":{}}}],["onetoone",{"_index":667,"title":{},"body":{"entities/Profile.html":{}}}],["optional",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Autor.html":{},"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"entities/Cliente.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"entities/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SeedService.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoresModule.html":{},"modules/CategoriasModule.html":{},"modules/ClientesModule.html":{},"modules/LibrosModule.html":{},"modules/ProfileModule.html":{},"modules/SeedModule.html":{},"overview.html":{}}}],["overview",{"_index":835,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":801,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padre",{"_index":516,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pagecount",{"_index":444,"title":{},"body":{"classes/CreateLibroDto.html":{},"entities/Libro.html":{}}}],["para",{"_index":552,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["param",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoresController.html":{},"controllers/CategoriasController.html":{},"controllers/ClientesController.html":{},"controllers/LibrosController.html":{},"controllers/ProfileController.html":{}}}],["parameters",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SeedService.html":{}}}],["parametro",{"_index":524,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["partialtype",{"_index":752,"title":{},"body":{"classes/UpdateAutoreDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateLibroDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createautoredto",{"_index":755,"title":{},"body":{"classes/UpdateAutoreDto.html":{}}}],["partialtype(createcategoriadto",{"_index":757,"title":{},"body":{"classes/UpdateCategoriaDto.html":{}}}],["partialtype(createclientedto",{"_index":759,"title":{},"body":{"classes/UpdateClienteDto.html":{}}}],["partialtype(createlibrodto",{"_index":761,"title":{},"body":{"classes/UpdateLibroDto.html":{}}}],["partialtype(createprofiledto",{"_index":763,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["partialtype(createuserdto",{"_index":767,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["pasa",{"_index":539,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passport",{"_index":512,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":509,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"entities/Profile.html":{},"entities/User.html":{}}}],["patch",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoresController.html":{},"controllers/CategoriasController.html":{},"controllers/ClientesController.html":{},"controllers/LibrosController.html":{},"controllers/ProfileController.html":{}}}],["patch(':id",{"_index":240,"title":{},"body":{"controllers/AutoresController.html":{},"controllers/CategoriasController.html":{},"controllers/ProfileController.html":{}}}],["patch(':idc",{"_index":371,"title":{},"body":{"controllers/ClientesController.html":{}}}],["patch(':idl",{"_index":600,"title":{},"body":{"controllers/LibrosController.html":{}}}],["payload",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":498,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["pero",{"_index":535,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["personalizados",{"_index":551,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["peticion",{"_index":643,"title":{},"body":{"injectables/LibrosService.html":{}}}],["petición",{"_index":548,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pg",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["podemos",{"_index":500,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["port",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoresController.html":{},"controllers/CategoriasController.html":{},"controllers/ClientesController.html":{},"controllers/LibrosController.html":{},"controllers/ProfileController.html":{}}}],["post('login",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"injectables/LibrosService.html":{}}}],["prefix",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AutoresController.html":{},"controllers/CategoriasController.html":{},"controllers/ClientesController.html":{},"controllers/LibrosController.html":{},"controllers/ProfileController.html":{},"controllers/SeedController.html":{}}}],["prepara",{"_index":637,"title":{},"body":{"injectables/LibrosService.html":{}}}],["primarygeneratedcolumn",{"_index":214,"title":{},"body":{"entities/Autor.html":{},"entities/Categoria.html":{},"entities/Cliente.html":{},"entities/Libro.html":{},"entities/Profile.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":205,"title":{},"body":{"entities/Autor.html":{},"entities/Categoria.html":{},"entities/Cliente.html":{},"entities/Libro.html":{},"entities/Profile.html":{},"entities/User.html":{}}}],["private",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{},"injectables/SeedService.html":{}}}],["proceso",{"_index":547,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["process.env.db_host",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_name",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_port",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_username",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.jwt_secret",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{}}}],["profile",{"_index":655,"title":{"entities/Profile.html":{}},"body":{"entities/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["profile.cliente",{"_index":709,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile.controller",{"_index":691,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.dto",{"_index":680,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts",{"_index":467,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["profile.dto.ts:12",{"_index":471,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:16",{"_index":473,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:20",{"_index":469,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:24",{"_index":472,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:28",{"_index":470,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:8",{"_index":468,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.service",{"_index":679,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profilecontroller",{"_index":669,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profileid",{"_index":657,"title":{},"body":{"entities/Profile.html":{}}}],["profilemodule",{"_index":12,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilerepositorio",{"_index":698,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profileservice",{"_index":678,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":508,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["promise.all(insertpromises",{"_index":750,"title":{},"body":{"injectables/SeedService.html":{}}}],["properties",{"_index":201,"title":{"properties.html":{}},"body":{"entities/Autor.html":{},"entities/Categoria.html":{},"entities/Cliente.html":{},"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"entities/Libro.html":{},"classes/LoginUserDto.html":{},"entities/Profile.html":{},"entities/User.html":{},"properties.html":{}}}],["providers",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{},"modules/AutoresModule.html":{},"modules/CategoriasModule.html":{},"modules/ClientesModule.html":{},"modules/LibrosModule.html":{},"modules/ProfileModule.html":{},"modules/SeedModule.html":{}}}],["prueba",{"_index":770,"title":{},"body":{"entities/User.html":{}}}],["publisheddate",{"_index":445,"title":{},"body":{"classes/CreateLibroDto.html":{},"entities/Libro.html":{}}}],["query",{"_index":415,"title":{},"body":{"injectables/ClientesService.html":{}}}],["readonly",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AutoresController.html":{},"controllers/CategoriasController.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/SeedController.html":{},"injectables/SeedService.html":{}}}],["reflect",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["registrado",{"_index":554,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["relacion",{"_index":412,"title":{},"body":{"injectables/ClientesService.html":{},"injectables/LibrosService.html":{}}}],["relación",{"_index":336,"title":{},"body":{"entities/Cliente.html":{}}}],["relations",{"_index":414,"title":{},"body":{"injectables/ClientesService.html":{}}}],["remove",{"_index":226,"title":{},"body":{"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["remove(@param('id",{"_index":254,"title":{},"body":{"controllers/AutoresController.html":{},"controllers/CategoriasController.html":{},"controllers/ProfileController.html":{}}}],["remove(@param('idc",{"_index":383,"title":{},"body":{"controllers/ClientesController.html":{}}}],["remove(@param('idl",{"_index":612,"title":{},"body":{"controllers/LibrosController.html":{}}}],["remove(id",{"_index":235,"title":{},"body":{"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["remove(idc",{"_index":366,"title":{},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{}}}],["remove(idl",{"_index":595,"title":{},"body":{"controllers/LibrosController.html":{},"injectables/LibrosService.html":{}}}],["removes",{"_index":273,"title":{},"body":{"injectables/AutoresService.html":{},"injectables/CategoriasService.html":{},"injectables/ClientesService.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{}}}],["repository",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{}}}],["request",{"_index":526,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoresModule.html":{},"modules/CategoriasModule.html":{},"modules/ClientesModule.html":{},"modules/LibrosModule.html":{},"modules/ProfileModule.html":{},"modules/SeedModule.html":{},"overview.html":{}}}],["results",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Autor.html":{},"controllers/AutoresController.html":{},"modules/AutoresModule.html":{},"injectables/AutoresService.html":{},"entities/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"entities/Cliente.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CreateAutoreDto.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Libro.html":{},"controllers/LibrosController.html":{},"modules/LibrosModule.html":{},"injectables/LibrosService.html":{},"classes/LoginUserDto.html":{},"entities/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/SeedController.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"classes/UpdateAutoreDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateLibroDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/SeedController.html":{},"injectables/SeedService.html":{}}}],["returns",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/SeedController.html":{},"injectables/SeedService.html":{}}}],["rimraf",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["roles",{"_index":771,"title":{},"body":{"entities/User.html":{}}}],["rundata",{"_index":732,"title":{},"body":{"injectables/SeedService.html":{}}}],["rxjs",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["se",{"_index":540,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LibrosService.html":{}}}],["seccion",{"_index":525,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secret",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":518,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["seed",{"_index":715,"title":{},"body":{"controllers/SeedController.html":{}}}],["seed.controller",{"_index":726,"title":{},"body":{"modules/SeedModule.html":{}}}],["seed.service",{"_index":719,"title":{},"body":{"controllers/SeedController.html":{},"modules/SeedModule.html":{}}}],["seed/data/mis",{"_index":740,"title":{},"body":{"injectables/SeedService.html":{}}}],["seed/data/users.json",{"_index":738,"title":{},"body":{"injectables/SeedService.html":{}}}],["seedcontroller",{"_index":713,"title":{"controllers/SeedController.html":{}},"body":{"controllers/SeedController.html":{},"modules/SeedModule.html":{},"coverage.html":{}}}],["seedmodule",{"_index":13,"title":{"modules/SeedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SeedModule.html":{},"modules.html":{},"overview.html":{}}}],["seedservice",{"_index":718,"title":{"injectables/SeedService.html":{}},"body":{"controllers/SeedController.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"coverage.html":{},"overview.html":{}}}],["segundos",{"_index":647,"title":{},"body":{"injectables/LibrosService.html":{}}}],["select",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{}}}],["sensato",{"_index":332,"title":{},"body":{"entities/Cliente.html":{}}}],["server",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{}}}],["sería",{"_index":333,"title":{},"body":{"entities/Cliente.html":{}}}],["sgbd",{"_index":644,"title":{},"body":{"injectables/LibrosService.html":{}}}],["shortdescription",{"_index":446,"title":{},"body":{"classes/CreateLibroDto.html":{},"entities/Libro.html":{}}}],["si",{"_index":538,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["signoptions",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{}}}],["sin",{"_index":580,"title":{},"body":{"entities/Libro.html":{}}}],["source",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Autor.html":{},"controllers/AutoresController.html":{},"modules/AutoresModule.html":{},"injectables/AutoresService.html":{},"entities/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"entities/Cliente.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CreateAutoreDto.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Libro.html":{},"controllers/LibrosController.html":{},"modules/LibrosModule.html":{},"injectables/LibrosService.html":{},"classes/LoginUserDto.html":{},"entities/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/SeedController.html":{},"modules/SeedModule.html":{},"injectables/SeedService.html":{},"classes/UpdateAutoreDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateLibroDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["src/.../main.ts",{"_index":827,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["src/main.ts",{"_index":788,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:12",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:17",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:10",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:17",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:42",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:62",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:69",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/create",{"_index":474,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts.ts",{"_index":652,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts.ts:16",{"_index":654,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["src/modules/auth/dto/login.dto.ts.ts:7",{"_index":653,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["src/modules/auth/dto/update",{"_index":765,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/auth/entities/user.entity.ts",{"_index":768,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/modules/auth/entities/user.entity.ts:10",{"_index":772,"title":{},"body":{"entities/User.html":{}}}],["src/modules/auth/entities/user.entity.ts:13",{"_index":778,"title":{},"body":{"entities/User.html":{}}}],["src/modules/auth/entities/user.entity.ts:16",{"_index":773,"title":{},"body":{"entities/User.html":{}}}],["src/modules/auth/entities/user.entity.ts:19",{"_index":777,"title":{},"body":{"entities/User.html":{}}}],["src/modules/auth/entities/user.entity.ts:25",{"_index":782,"title":{},"body":{"entities/User.html":{}}}],["src/modules/auth/entities/user.entity.ts:28",{"_index":779,"title":{},"body":{"entities/User.html":{}}}],["src/modules/auth/entities/user.entity.ts:7",{"_index":774,"title":{},"body":{"entities/User.html":{}}}],["src/modules/auth/interfaces/jwt",{"_index":497,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/modules/auth/strategies/jwt.strategy.ts",{"_index":503,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/strategies/jwt.strategy.ts:11",{"_index":505,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/strategies/jwt.strategy.ts:27",{"_index":507,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/autores/autores.controller.ts",{"_index":222,"title":{},"body":{"controllers/AutoresController.html":{},"coverage.html":{}}}],["src/modules/autores/autores.controller.ts:11",{"_index":230,"title":{},"body":{"controllers/AutoresController.html":{}}}],["src/modules/autores/autores.controller.ts:16",{"_index":231,"title":{},"body":{"controllers/AutoresController.html":{}}}],["src/modules/autores/autores.controller.ts:21",{"_index":234,"title":{},"body":{"controllers/AutoresController.html":{}}}],["src/modules/autores/autores.controller.ts:26",{"_index":241,"title":{},"body":{"controllers/AutoresController.html":{}}}],["src/modules/autores/autores.controller.ts:31",{"_index":237,"title":{},"body":{"controllers/AutoresController.html":{}}}],["src/modules/autores/autores.module.ts",{"_index":258,"title":{},"body":{"modules/AutoresModule.html":{}}}],["src/modules/autores/autores.service.ts",{"_index":262,"title":{},"body":{"injectables/AutoresService.html":{},"coverage.html":{}}}],["src/modules/autores/autores.service.ts:11",{"_index":264,"title":{},"body":{"injectables/AutoresService.html":{}}}],["src/modules/autores/autores.service.ts:15",{"_index":266,"title":{},"body":{"injectables/AutoresService.html":{}}}],["src/modules/autores/autores.service.ts:19",{"_index":268,"title":{},"body":{"injectables/AutoresService.html":{}}}],["src/modules/autores/autores.service.ts:23",{"_index":267,"title":{},"body":{"injectables/AutoresService.html":{}}}],["src/modules/autores/autores.service.ts:7",{"_index":263,"title":{},"body":{"injectables/AutoresService.html":{}}}],["src/modules/autores/dto/create",{"_index":419,"title":{},"body":{"classes/CreateAutoreDto.html":{},"coverage.html":{}}}],["src/modules/autores/dto/update",{"_index":751,"title":{},"body":{"classes/UpdateAutoreDto.html":{},"coverage.html":{}}}],["src/modules/autores/entities/autor.entity.ts",{"_index":200,"title":{},"body":{"entities/Autor.html":{},"coverage.html":{}}}],["src/modules/autores/entities/autor.entity.ts:10",{"_index":211,"title":{},"body":{"entities/Autor.html":{}}}],["src/modules/autores/entities/autor.entity.ts:19",{"_index":208,"title":{},"body":{"entities/Autor.html":{}}}],["src/modules/autores/entities/autor.entity.ts:7",{"_index":206,"title":{},"body":{"entities/Autor.html":{}}}],["src/modules/categorias/categorias.controller.ts",{"_index":280,"title":{},"body":{"controllers/CategoriasController.html":{},"coverage.html":{}}}],["src/modules/categorias/categorias.controller.ts:11",{"_index":284,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["src/modules/categorias/categorias.controller.ts:16",{"_index":285,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["src/modules/categorias/categorias.controller.ts:21",{"_index":286,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["src/modules/categorias/categorias.controller.ts:26",{"_index":289,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["src/modules/categorias/categorias.controller.ts:31",{"_index":287,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["src/modules/categorias/categorias.module.ts",{"_index":301,"title":{},"body":{"modules/CategoriasModule.html":{}}}],["src/modules/categorias/categorias.service.ts",{"_index":304,"title":{},"body":{"injectables/CategoriasService.html":{},"coverage.html":{}}}],["src/modules/categorias/categorias.service.ts:11",{"_index":306,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["src/modules/categorias/categorias.service.ts:15",{"_index":307,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["src/modules/categorias/categorias.service.ts:19",{"_index":309,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["src/modules/categorias/categorias.service.ts:23",{"_index":308,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["src/modules/categorias/categorias.service.ts:7",{"_index":305,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["src/modules/categorias/dto/create",{"_index":421,"title":{},"body":{"classes/CreateCategoriaDto.html":{},"coverage.html":{}}}],["src/modules/categorias/dto/update",{"_index":756,"title":{},"body":{"classes/UpdateCategoriaDto.html":{},"coverage.html":{}}}],["src/modules/categorias/entities/categoria.entity.ts",{"_index":275,"title":{},"body":{"entities/Categoria.html":{},"coverage.html":{}}}],["src/modules/categorias/entities/categoria.entity.ts:11",{"_index":277,"title":{},"body":{"entities/Categoria.html":{}}}],["src/modules/categorias/entities/categoria.entity.ts:8",{"_index":276,"title":{},"body":{"entities/Categoria.html":{}}}],["src/modules/clientes/clientes.controller.ts",{"_index":358,"title":{},"body":{"controllers/ClientesController.html":{},"coverage.html":{}}}],["src/modules/clientes/clientes.controller.ts:11",{"_index":361,"title":{},"body":{"controllers/ClientesController.html":{}}}],["src/modules/clientes/clientes.controller.ts:16",{"_index":362,"title":{},"body":{"controllers/ClientesController.html":{}}}],["src/modules/clientes/clientes.controller.ts:21",{"_index":365,"title":{},"body":{"controllers/ClientesController.html":{}}}],["src/modules/clientes/clientes.controller.ts:26",{"_index":372,"title":{},"body":{"controllers/ClientesController.html":{}}}],["src/modules/clientes/clientes.controller.ts:31",{"_index":368,"title":{},"body":{"controllers/ClientesController.html":{}}}],["src/modules/clientes/clientes.module.ts",{"_index":388,"title":{},"body":{"modules/ClientesModule.html":{}}}],["src/modules/clientes/clientes.service.ts",{"_index":392,"title":{},"body":{"injectables/ClientesService.html":{},"coverage.html":{}}}],["src/modules/clientes/clientes.service.ts:18",{"_index":397,"title":{},"body":{"injectables/ClientesService.html":{}}}],["src/modules/clientes/clientes.service.ts:31",{"_index":399,"title":{},"body":{"injectables/ClientesService.html":{}}}],["src/modules/clientes/clientes.service.ts:36",{"_index":400,"title":{},"body":{"injectables/ClientesService.html":{}}}],["src/modules/clientes/clientes.service.ts:49",{"_index":403,"title":{},"body":{"injectables/ClientesService.html":{}}}],["src/modules/clientes/clientes.service.ts:53",{"_index":402,"title":{},"body":{"injectables/ClientesService.html":{}}}],["src/modules/clientes/clientes.service.ts:57",{"_index":398,"title":{},"body":{"injectables/ClientesService.html":{}}}],["src/modules/clientes/clientes.service.ts:72",{"_index":401,"title":{},"body":{"injectables/ClientesService.html":{}}}],["src/modules/clientes/clientes.service.ts:9",{"_index":395,"title":{},"body":{"injectables/ClientesService.html":{}}}],["src/modules/clientes/dto/create",{"_index":423,"title":{},"body":{"classes/CreateClienteDto.html":{},"coverage.html":{}}}],["src/modules/clientes/dto/update",{"_index":758,"title":{},"body":{"classes/UpdateClienteDto.html":{},"coverage.html":{}}}],["src/modules/clientes/entities/cliente.entity",{"_index":666,"title":{},"body":{"entities/Profile.html":{}}}],["src/modules/clientes/entities/cliente.entity.ts",{"_index":311,"title":{},"body":{"entities/Cliente.html":{},"coverage.html":{}}}],["src/modules/clientes/entities/cliente.entity.ts:12",{"_index":323,"title":{},"body":{"entities/Cliente.html":{}}}],["src/modules/clientes/entities/cliente.entity.ts:17",{"_index":316,"title":{},"body":{"entities/Cliente.html":{}}}],["src/modules/clientes/entities/cliente.entity.ts:22",{"_index":325,"title":{},"body":{"entities/Cliente.html":{}}}],["src/modules/clientes/entities/cliente.entity.ts:27",{"_index":317,"title":{},"body":{"entities/Cliente.html":{}}}],["src/modules/clientes/entities/cliente.entity.ts:32",{"_index":324,"title":{},"body":{"entities/Cliente.html":{}}}],["src/modules/clientes/entities/cliente.entity.ts:43",{"_index":322,"title":{},"body":{"entities/Cliente.html":{}}}],["src/modules/clientes/entities/cliente.entity.ts:7",{"_index":318,"title":{},"body":{"entities/Cliente.html":{}}}],["src/modules/libros/dto/create",{"_index":439,"title":{},"body":{"classes/CreateLibroDto.html":{},"coverage.html":{}}}],["src/modules/libros/dto/update",{"_index":760,"title":{},"body":{"classes/UpdateLibroDto.html":{},"coverage.html":{}}}],["src/modules/libros/entities/libro.entity.ts",{"_index":555,"title":{},"body":{"entities/Libro.html":{},"coverage.html":{}}}],["src/modules/libros/entities/libro.entity.ts:12",{"_index":574,"title":{},"body":{"entities/Libro.html":{}}}],["src/modules/libros/entities/libro.entity.ts:17",{"_index":561,"title":{},"body":{"entities/Libro.html":{}}}],["src/modules/libros/entities/libro.entity.ts:22",{"_index":567,"title":{},"body":{"entities/Libro.html":{}}}],["src/modules/libros/entities/libro.entity.ts:27",{"_index":570,"title":{},"body":{"entities/Libro.html":{}}}],["src/modules/libros/entities/libro.entity.ts:32",{"_index":573,"title":{},"body":{"entities/Libro.html":{}}}],["src/modules/libros/entities/libro.entity.ts:37",{"_index":571,"title":{},"body":{"entities/Libro.html":{}}}],["src/modules/libros/entities/libro.entity.ts:42",{"_index":563,"title":{},"body":{"entities/Libro.html":{}}}],["src/modules/libros/entities/libro.entity.ts:47",{"_index":572,"title":{},"body":{"entities/Libro.html":{}}}],["src/modules/libros/entities/libro.entity.ts:58",{"_index":559,"title":{},"body":{"entities/Libro.html":{}}}],["src/modules/libros/entities/libro.entity.ts:7",{"_index":560,"title":{},"body":{"entities/Libro.html":{}}}],["src/modules/libros/libros.controller.ts",{"_index":588,"title":{},"body":{"controllers/LibrosController.html":{},"coverage.html":{}}}],["src/modules/libros/libros.controller.ts:11",{"_index":590,"title":{},"body":{"controllers/LibrosController.html":{}}}],["src/modules/libros/libros.controller.ts:16",{"_index":591,"title":{},"body":{"controllers/LibrosController.html":{}}}],["src/modules/libros/libros.controller.ts:21",{"_index":594,"title":{},"body":{"controllers/LibrosController.html":{}}}],["src/modules/libros/libros.controller.ts:26",{"_index":601,"title":{},"body":{"controllers/LibrosController.html":{}}}],["src/modules/libros/libros.controller.ts:31",{"_index":597,"title":{},"body":{"controllers/LibrosController.html":{}}}],["src/modules/libros/libros.module.ts",{"_index":618,"title":{},"body":{"modules/LibrosModule.html":{}}}],["src/modules/libros/libros.service.ts",{"_index":623,"title":{},"body":{"injectables/LibrosService.html":{},"coverage.html":{}}}],["src/modules/libros/libros.service.ts:10",{"_index":625,"title":{},"body":{"injectables/LibrosService.html":{}}}],["src/modules/libros/libros.service.ts:20",{"_index":627,"title":{},"body":{"injectables/LibrosService.html":{}}}],["src/modules/libros/libros.service.ts:45",{"_index":628,"title":{},"body":{"injectables/LibrosService.html":{}}}],["src/modules/libros/libros.service.ts:51",{"_index":629,"title":{},"body":{"injectables/LibrosService.html":{}}}],["src/modules/libros/libros.service.ts:55",{"_index":631,"title":{},"body":{"injectables/LibrosService.html":{}}}],["src/modules/libros/libros.service.ts:59",{"_index":630,"title":{},"body":{"injectables/LibrosService.html":{}}}],["src/modules/profile/dto/create",{"_index":466,"title":{},"body":{"classes/CreateProfileDto.html":{},"coverage.html":{}}}],["src/modules/profile/dto/update",{"_index":762,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["src/modules/profile/entities/profile.entity.ts",{"_index":656,"title":{},"body":{"entities/Profile.html":{},"coverage.html":{}}}],["src/modules/profile/entities/profile.entity.ts:10",{"_index":660,"title":{},"body":{"entities/Profile.html":{}}}],["src/modules/profile/entities/profile.entity.ts:13",{"_index":662,"title":{},"body":{"entities/Profile.html":{}}}],["src/modules/profile/entities/profile.entity.ts:16",{"_index":661,"title":{},"body":{"entities/Profile.html":{}}}],["src/modules/profile/entities/profile.entity.ts:19",{"_index":664,"title":{},"body":{"entities/Profile.html":{}}}],["src/modules/profile/entities/profile.entity.ts:22",{"_index":665,"title":{},"body":{"entities/Profile.html":{}}}],["src/modules/profile/entities/profile.entity.ts:29",{"_index":659,"title":{},"body":{"entities/Profile.html":{}}}],["src/modules/profile/entities/profile.entity.ts:7",{"_index":663,"title":{},"body":{"entities/Profile.html":{}}}],["src/modules/profile/profile.controller.ts",{"_index":670,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/modules/profile/profile.controller.ts:11",{"_index":672,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.controller.ts:16",{"_index":673,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.controller.ts:21",{"_index":674,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.controller.ts:26",{"_index":677,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.controller.ts:31",{"_index":675,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.module.ts",{"_index":690,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/modules/profile/profile.service.ts",{"_index":694,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/modules/profile/profile.service.ts:10",{"_index":697,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:19",{"_index":699,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:38",{"_index":700,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:42",{"_index":701,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:46",{"_index":703,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:50",{"_index":702,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/seed/seed.controller.ts",{"_index":714,"title":{},"body":{"controllers/SeedController.html":{},"coverage.html":{}}}],["src/modules/seed/seed.controller.ts:10",{"_index":717,"title":{},"body":{"controllers/SeedController.html":{}}}],["src/modules/seed/seed.module.ts",{"_index":725,"title":{},"body":{"modules/SeedModule.html":{}}}],["src/modules/seed/seed.service.ts",{"_index":730,"title":{},"body":{"injectables/SeedService.html":{},"coverage.html":{}}}],["src/modules/seed/seed.service.ts:16",{"_index":736,"title":{},"body":{"injectables/SeedService.html":{}}}],["src/modules/seed/seed.service.ts:25",{"_index":735,"title":{},"body":{"injectables/SeedService.html":{}}}],["src/modules/seed/seed.service.ts:9",{"_index":734,"title":{},"body":{"injectables/SeedService.html":{}}}],["started",{"_index":829,"title":{"index.html":{}},"body":{}}],["statements",{"_index":787,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":447,"title":{},"body":{"classes/CreateLibroDto.html":{},"entities/Libro.html":{}}}],["strategies/jwt.strategy",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":511,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":204,"title":{},"body":{"entities/Autor.html":{},"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"entities/Categoria.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"entities/Cliente.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"entities/Libro.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"classes/LoginUserDto.html":{},"entities/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"entities/User.html":{}}}],["super",{"_index":517,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":832,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":833,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["text",{"_index":569,"title":{},"body":{"entities/Libro.html":{}}}],["this.authservice.create(createuserdto",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(loginuserdto",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.autoresservice.create(createautoredto",{"_index":248,"title":{},"body":{"controllers/AutoresController.html":{}}}],["this.autoresservice.findall",{"_index":249,"title":{},"body":{"controllers/AutoresController.html":{}}}],["this.autoresservice.findone(+id",{"_index":251,"title":{},"body":{"controllers/AutoresController.html":{}}}],["this.autoresservice.remove(+id",{"_index":255,"title":{},"body":{"controllers/AutoresController.html":{}}}],["this.autoresservice.update(+id",{"_index":253,"title":{},"body":{"controllers/AutoresController.html":{}}}],["this.categoriasservice.create(createcategoriadto",{"_index":294,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["this.categoriasservice.findall",{"_index":295,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["this.categoriasservice.findone(+id",{"_index":296,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["this.categoriasservice.remove(+id",{"_index":298,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["this.categoriasservice.update(+id",{"_index":297,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["this.clienterepository.create(createclientedto",{"_index":405,"title":{},"body":{"injectables/ClientesService.html":{}}}],["this.clienterepository.createquerybuilder('cliente",{"_index":416,"title":{},"body":{"injectables/ClientesService.html":{}}}],["this.clienterepository.find",{"_index":410,"title":{},"body":{"injectables/ClientesService.html":{}}}],["this.clienterepository.findone",{"_index":413,"title":{},"body":{"injectables/ClientesService.html":{}}}],["this.clienterepository.save(cliente",{"_index":407,"title":{},"body":{"injectables/ClientesService.html":{}}}],["this.clienteservice.create(cliente",{"_index":711,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.clienteservice.findone(idcliente",{"_index":708,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.clientesservice.create(createclientedto",{"_index":377,"title":{},"body":{"controllers/ClientesController.html":{}}}],["this.clientesservice.deleteallclientes",{"_index":743,"title":{},"body":{"injectables/SeedService.html":{}}}],["this.clientesservice.findall",{"_index":378,"title":{},"body":{"controllers/ClientesController.html":{}}}],["this.clientesservice.findone",{"_index":640,"title":{},"body":{"injectables/LibrosService.html":{}}}],["this.clientesservice.findone(idc",{"_index":380,"title":{},"body":{"controllers/ClientesController.html":{}}}],["this.clientesservice.remove(idc",{"_index":384,"title":{},"body":{"controllers/ClientesController.html":{}}}],["this.clientesservice.update(idc",{"_index":382,"title":{},"body":{"controllers/ClientesController.html":{}}}],["this.getjwttoken",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.github",{"_index":352,"title":{},"body":{"entities/Cliente.html":{}}}],["this.github.includes('https://github.com",{"_index":351,"title":{},"body":{"entities/Cliente.html":{}}}],["this.handledberrors(error",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{}}}],["this.insertnewclientes",{"_index":744,"title":{},"body":{"injectables/SeedService.html":{}}}],["this.insertnewusers",{"_index":746,"title":{},"body":{"injectables/SeedService.html":{}}}],["this.jwtservice.sign(payload",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.librorepository.create",{"_index":641,"title":{},"body":{"injectables/LibrosService.html":{}}}],["this.librorepository.create(createlibrodto",{"_index":635,"title":{},"body":{"injectables/LibrosService.html":{}}}],["this.librorepository.find",{"_index":651,"title":{},"body":{"injectables/LibrosService.html":{}}}],["this.librorepository.save",{"_index":648,"title":{},"body":{"injectables/LibrosService.html":{}}}],["this.librorepository.save(libro",{"_index":636,"title":{},"body":{"injectables/LibrosService.html":{}}}],["this.librosservice.create(createlibrodto",{"_index":606,"title":{},"body":{"controllers/LibrosController.html":{}}}],["this.librosservice.findall",{"_index":607,"title":{},"body":{"controllers/LibrosController.html":{}}}],["this.librosservice.findone(idl",{"_index":609,"title":{},"body":{"controllers/LibrosController.html":{}}}],["this.librosservice.remove(idl",{"_index":613,"title":{},"body":{"controllers/LibrosController.html":{}}}],["this.librosservice.update(idl",{"_index":611,"title":{},"body":{"controllers/LibrosController.html":{}}}],["this.profilerepositorio.create({...camposprofile",{"_index":707,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profilerepositorio.save(profile",{"_index":710,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profileservice.create(createprofiledto",{"_index":682,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.findall",{"_index":683,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.findone(+id",{"_index":684,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.remove(+id",{"_index":686,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.update(+id",{"_index":685,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.seedservice.rundata",{"_index":721,"title":{},"body":{"controllers/SeedController.html":{}}}],["this.title",{"_index":585,"title":{},"body":{"entities/Libro.html":{}}}],["this.twitter",{"_index":355,"title":{},"body":{"entities/Cliente.html":{}}}],["this.twitter.includes('https://twitter.com",{"_index":354,"title":{},"body":{"entities/Cliente.html":{}}}],["this.userrepository.create",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.findone",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.findoneby",{"_index":530,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userrepository.save(user",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.deleteallusers",{"_index":745,"title":{},"body":{"injectables/SeedService.html":{}}}],["this.website",{"_index":349,"title":{},"body":{"entities/Cliente.html":{}}}],["this.website.includes('https",{"_index":348,"title":{},"body":{"entities/Cliente.html":{}}}],["throw",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LibrosService.html":{}}}],["thumbnailurl",{"_index":448,"title":{},"body":{"classes/CreateLibroDto.html":{},"entities/Libro.html":{}}}],["tipo",{"_index":528,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["title",{"_index":449,"title":{},"body":{"classes/CreateLibroDto.html":{},"entities/Libro.html":{}}}],["todos",{"_index":544,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["token",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["touppercase",{"_index":586,"title":{},"body":{"entities/Libro.html":{}}}],["transformer",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"entities/Autor.html":{},"entities/Categoria.html":{},"entities/Cliente.html":{},"injectables/ClientesService.html":{},"entities/Libro.html":{},"entities/Profile.html":{},"entities/User.html":{}}}],["try",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{}}}],["twitter",{"_index":314,"title":{},"body":{"entities/Cliente.html":{},"classes/CreateClienteDto.html":{},"classes/CreateProfileDto.html":{},"entities/Profile.html":{}}}],["type",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Autor.html":{},"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"entities/Categoria.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"entities/Cliente.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Libro.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"classes/LoginUserDto.html":{},"entities/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SeedService.html":{},"entities/User.html":{},"coverage.html":{}}}],["type:'text",{"_index":577,"title":{},"body":{"entities/Libro.html":{}}}],["typeorm",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"entities/Autor.html":{},"entities/Categoria.html":{},"entities/Cliente.html":{},"injectables/ClientesService.html":{},"injectables/JwtStrategy.html":{},"entities/Libro.html":{},"injectables/LibrosService.html":{},"entities/Profile.html":{},"injectables/ProfileService.html":{},"entities/User.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoresModule.html":{},"modules/CategoriasModule.html":{},"modules/ClientesModule.html":{},"modules/LibrosModule.html":{},"modules/ProfileModule.html":{},"modules/SeedModule.html":{}}}],["typeormmodule.forfeature",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{},"modules/CategoriasModule.html":{}}}],["typeormmodule.forfeature([autor",{"_index":261,"title":{},"body":{"modules/AutoresModule.html":{}}}],["typeormmodule.forfeature([cliente",{"_index":391,"title":{},"body":{"modules/ClientesModule.html":{}}}],["typeormmodule.forfeature([libro",{"_index":622,"title":{},"body":{"modules/LibrosModule.html":{}}}],["typeormmodule.forfeature([profile",{"_index":693,"title":{},"body":{"modules/ProfileModule.html":{}}}],["typeormmodule.forroot",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":754,"title":{},"body":{"classes/UpdateAutoreDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateLibroDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["un",{"_index":523,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unauthorizedexception",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('credenciales",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('token",{"_index":531,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('usuario",{"_index":537,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":781,"title":{},"body":{"entities/User.html":{}}}],["unique",{"_index":210,"title":{},"body":{"entities/Autor.html":{},"entities/Categoria.html":{},"entities/Cliente.html":{},"entities/Libro.html":{},"entities/Profile.html":{},"entities/User.html":{}}}],["unique:true",{"_index":328,"title":{},"body":{"entities/Cliente.html":{}}}],["unknown",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientesService.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{}}}],["unlicensed",{"_index":845,"title":{},"body":{"properties.html":{}}}],["unpublish",{"_index":458,"title":{},"body":{"classes/CreateLibroDto.html":{}}}],["update",{"_index":227,"title":{},"body":{"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["update(@param('id",{"_index":252,"title":{},"body":{"controllers/AutoresController.html":{},"controllers/CategoriasController.html":{},"controllers/ProfileController.html":{}}}],["update(@param('idc",{"_index":381,"title":{},"body":{"controllers/ClientesController.html":{}}}],["update(@param('idl",{"_index":610,"title":{},"body":{"controllers/LibrosController.html":{}}}],["update(id",{"_index":238,"title":{},"body":{"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["update(idc",{"_index":369,"title":{},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{}}}],["update(idl",{"_index":598,"title":{},"body":{"controllers/LibrosController.html":{},"injectables/LibrosService.html":{}}}],["updateautoredto",{"_index":239,"title":{"classes/UpdateAutoreDto.html":{}},"body":{"controllers/AutoresController.html":{},"injectables/AutoresService.html":{},"classes/UpdateAutoreDto.html":{},"coverage.html":{}}}],["updatecategoriadto",{"_index":288,"title":{"classes/UpdateCategoriaDto.html":{}},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"classes/UpdateCategoriaDto.html":{},"coverage.html":{}}}],["updateclientedto",{"_index":370,"title":{"classes/UpdateClienteDto.html":{}},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/UpdateClienteDto.html":{},"coverage.html":{}}}],["updatelibrodto",{"_index":599,"title":{"classes/UpdateLibroDto.html":{}},"body":{"controllers/LibrosController.html":{},"injectables/LibrosService.html":{},"classes/UpdateLibroDto.html":{},"coverage.html":{}}}],["updateprofiledto",{"_index":676,"title":{"classes/UpdateProfileDto.html":{}},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["updates",{"_index":272,"title":{},"body":{"injectables/AutoresService.html":{},"injectables/CategoriasService.html":{},"injectables/ClientesService.html":{},"injectables/LibrosService.html":{},"injectables/ProfileService.html":{}}}],["updateuserdto",{"_index":764,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["uppercase",{"_index":484,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["usaremos",{"_index":549,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["usefactory",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{}}}],["user",{"_index":104,"title":{"entities/User.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"coverage.html":{}}}],["user.dto",{"_index":766,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts",{"_index":475,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:16",{"_index":487,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:20",{"_index":479,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":478,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.isactive",{"_index":533,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user.password",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["userrepository",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["userservice",{"_index":742,"title":{},"body":{"injectables/SeedService.html":{}}}],["usuario",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["validate",{"_index":504,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":506,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":436,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/CreateLibroDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"dependencies.html":{}}}],["valido",{"_index":532,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["version",{"_index":841,"title":{},"body":{"properties.html":{}}}],["válidas",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["website",{"_index":315,"title":{},"body":{"entities/Cliente.html":{},"classes/CreateClienteDto.html":{},"classes/CreateProfileDto.html":{},"entities/Profile.html":{}}}],["x",{"_index":646,"title":{},"body":{"injectables/LibrosService.html":{}}}],["y",{"_index":527,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["z",{"_index":482,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["z])(?=.*[a",{"_index":481,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AutoresModule.html":{},"modules/CategoriasModule.html":{},"modules/ClientesModule.html":{},"modules/LibrosModule.html":{},"modules/ProfileModule.html":{},"modules/SeedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAutoresModule\n\nAutoresModule\n\nAppModule -->\n\nAutoresModule->AppModule\n\n\n\n\n\nCategoriasModule\n\nCategoriasModule\n\nAppModule -->\n\nCategoriasModule->AppModule\n\n\n\n\n\nClientesModule\n\nClientesModule\n\nAppModule -->\n\nClientesModule->AppModule\n\n\n\n\n\nLibrosModule\n\nLibrosModule\n\nAppModule -->\n\nLibrosModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSeedModule\n\nSeedModule\n\nAppModule -->\n\nSeedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            AutoresModule\n                        \n                        \n                            CategoriasModule\n                        \n                        \n                            ClientesModule\n                        \n                        \n                            LibrosModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            SeedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ClientesModule } from './modules/clientes/clientes.module';\nimport { LibrosModule } from './modules/libros/libros.module';\nimport { ProfileModule } from './modules/profile/profile.module';\nimport { CategoriasModule } from './modules/categorias/categorias.module';\nimport { AutoresModule } from './modules/autores/autores.module';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { SeedModule } from './modules/seed/seed.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: process.env.DB_HOST,\n      port: +process.env.DB_PORT,\n      database: process.env.DB_NAME,\n      username: process.env.DB_USERNAME,\n      password: process.env.DB_PASSWORD,\n      autoLoadEntities: true,\n      synchronize: true\n    }),\n    ClientesModule,\n    LibrosModule,\n    ProfileModule,\n    CategoriasModule,\n    AutoresModule,\n    AuthModule,\n    SeedModule\n  ],\n})\nexport class AppModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginUserDto: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { CreateUserDto, LoginUserDto } from './dto';\n\n\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('register')\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.authService.create(createUserDto);\n  }\n\n  @Post('login')\n  login(@Body() loginUserDto: LoginUserDto) {\n    return this.authService.login(loginUserDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nJwtStrategy \n\nJwtStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './strategies/jwt.strategy';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  imports: [ \n    ConfigModule,\n    TypeOrmModule.forFeature( [ User ]),\n    PassportModule.register({ defaultStrategy: 'jwt'}),\n    JwtModule.registerAsync({\n      imports: [ ConfigModule ],\n      inject: [ ConfigService ],\n      useFactory: ( configService: ConfigService ) => {\n        console.log ('JWT Secret --> ', configService.get('JWT_SECRET'));\n        // console.log ('JWT: ', process.env.JWT_SECRET);\n        return {\n          secret: configService.get('JWT_SECRET'),\n          signOptions: {\n              expiresIn: '2h'\n          }\n        }\n      }\n    }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: {\n        expiresIn: '2h'\n      }\n    })\n  ],\n  exports: [ TypeOrmModule, AuthService, JwtStrategy, PassportModule, JwtModule ]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Private\n                                getJwtToken\n                            \n                            \n                                    Private\n                                handleDBErrors\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getJwtToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getJwtToken(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleDBErrors\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleDBErrors(error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginUserDto: LoginUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, InternalServerErrorException, UnauthorizedException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateUserDto, LoginUserDto } from './dto';\nimport { User } from './entities/user.entity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { JwtPayload } from './interfaces/jwt-payload.interface';\nimport { JwtService } from '@nestjs/jwt';\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    private readonly jwtService: JwtService\n  ){}\n\n  async login( loginUserDto: LoginUserDto ){\n    try {\n      // buscamos el usuario del email\n      const { email, password } = loginUserDto;\n      const user = await this.userRepository.findOne({ \n        where: { email },\n        select: { email: true, password: true }\n       });\n\n      if ( !user ) \n        throw new UnauthorizedException ('Credenciales no válidas (email)');\n\n      //comparamos las contraseñas \n      if (!bcrypt.compareSync( password, user.password ))\n        throw new UnauthorizedException('Credenciales no válidas (email)')\n      \n      return {\n        ...user, \n        token: this.getJwtToken({ email: user.email })\n      }\n      \n    } catch (error) {\n      this.handleDBErrors(error)\n    }\n  }\n  async create(createUserDto: CreateUserDto) {\n    try {\n      const { password, ...userData } = createUserDto;\n      const user = this.userRepository.create({\n        ...userData,\n        password: bcrypt.hashSync( password, 10 )\n      });\n      await this.userRepository.save(user);\n      delete user.password;\n\n      return {\n        ...user, \n        token: this.getJwtToken({ email: user.email })\n      }\n      \n    } catch (error) {\n      this.handleDBErrors(error)\n    }\n  }\n\n  private handleDBErrors (error: any): never{\n    if (error.code === '23505')\n      throw new BadRequestException(error.detail)\n    \n    throw new InternalServerErrorException('Please Check Server Error ...')\n  }\n\n  private getJwtToken( payload: JwtPayload){\n    const token = this.jwtService.sign(payload);\n    return token;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Autor.html":{"url":"entities/Autor.html","title":"entity - Autor","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Autor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/autores/entities/autor.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    Optional\n                                libros\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/autores/entities/autor.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        libros\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Libro\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/autores/entities/autor.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/autores/entities/autor.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToMany, PrimaryGeneratedColumn } from \"typeorm\";\nimport { Libro } from '../../libros/entities/libro.entity';\n\n@Entity()\nexport class Autor {\n    @PrimaryGeneratedColumn('uuid')\n    id:string;\n    \n    @Column('text', {unique: true})\n    name: string\n \n\n    // @OneToMany(\n    //     () => Libro,\n    //     (Libro) => Libro.autor,\n    //     { cascade: false }\n    // )\n\n    libros?:Libro\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AutoresController.html":{"url":"controllers/AutoresController.html","title":"controller - AutoresController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AutoresController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/autores/autores.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                autores\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAutoreDto: CreateAutoreDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/autores/autores.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAutoreDto\n                                    \n                                                CreateAutoreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/autores/autores.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/autores/autores.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/autores/autores.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateAutoreDto: UpdateAutoreDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/autores/autores.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAutoreDto\n                                    \n                                                UpdateAutoreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { AutoresService } from './autores.service';\nimport { CreateAutoreDto } from './dto/create-autore.dto';\nimport { UpdateAutoreDto } from './dto/update-autore.dto';\n\n@Controller('autores')\nexport class AutoresController {\n  constructor(private readonly autoresService: AutoresService) {}\n\n  @Post()\n  create(@Body() createAutoreDto: CreateAutoreDto) {\n    return this.autoresService.create(createAutoreDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.autoresService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.autoresService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateAutoreDto: UpdateAutoreDto) {\n    return this.autoresService.update(+id, updateAutoreDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.autoresService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AutoresModule.html":{"url":"modules/AutoresModule.html","title":"module - AutoresModule","body":"\n                   \n\n\n\n\n    Modules\n    AutoresModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AutoresModule\n\n\n\ncluster_AutoresModule_providers\n\n\n\n\nAutoresService\n\nAutoresService\n\n\n\nAutoresModule\n\nAutoresModule\n\nAutoresModule -->\n\nAutoresService->AutoresModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/autores/autores.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AutoresService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AutoresController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AutoresService } from './autores.service';\nimport { AutoresController } from './autores.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Autor } from './entities/autor.entity';\n\n@Module({\n  controllers: [AutoresController],\n  providers: [AutoresService],\n  imports: [\n    TypeOrmModule.forFeature([Autor])\n  ]\n})\nexport class AutoresModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AutoresService.html":{"url":"injectables/AutoresService.html","title":"injectable - AutoresService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AutoresService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/autores/autores.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAutoreDto: CreateAutoreDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/autores/autores.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAutoreDto\n                                    \n                                                CreateAutoreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/autores/autores.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/autores/autores.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/autores/autores.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateAutoreDto: UpdateAutoreDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/autores/autores.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAutoreDto\n                                    \n                                                UpdateAutoreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateAutoreDto } from './dto/create-autore.dto';\nimport { UpdateAutoreDto } from './dto/update-autore.dto';\n\n@Injectable()\nexport class AutoresService {\n  create(createAutoreDto: CreateAutoreDto) {\n    return 'This action adds a new autore';\n  }\n\n  findAll() {\n    return `This action returns all autores`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} autore`;\n  }\n\n  update(id: number, updateAutoreDto: UpdateAutoreDto) {\n    return `This action updates a #${id} autore`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} autore`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Categoria.html":{"url":"entities/Categoria.html","title":"entity - Categoria","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Categoria\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categorias/entities/categoria.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categorias/entities/categoria.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categorias/entities/categoria.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToMany, PrimaryGeneratedColumn } from \"typeorm\";\nimport { Libro } from '../../libros/entities/libro.entity';\n\n@Entity()\nexport class Categoria {\n\n   @PrimaryGeneratedColumn('uuid')\n   id:string;\n   \n   @Column('text', {unique: true})\n   name: string\n\n\n    // @OneToMany(\n    //     () => Libro,\n    //     (Libro) => Libro.categoria,\n    //     { cascade: false }\n    // )\n    // libros?:Libro[]\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoriasController.html":{"url":"controllers/CategoriasController.html","title":"controller - CategoriasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoriasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categorias/categorias.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                categorias\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCategoriaDto: CreateCategoriaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/categorias/categorias.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCategoriaDto\n                                    \n                                                CreateCategoriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/categorias/categorias.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/categorias/categorias.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/categorias/categorias.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCategoriaDto: UpdateCategoriaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/categorias/categorias.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCategoriaDto\n                                    \n                                                UpdateCategoriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { CategoriasService } from './categorias.service';\nimport { CreateCategoriaDto } from './dto/create-categoria.dto';\nimport { UpdateCategoriaDto } from './dto/update-categoria.dto';\n\n@Controller('categorias')\nexport class CategoriasController {\n  constructor(private readonly categoriasService: CategoriasService) {}\n\n  @Post()\n  create(@Body() createCategoriaDto: CreateCategoriaDto) {\n    return this.categoriasService.create(createCategoriaDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.categoriasService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.categoriasService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateCategoriaDto: UpdateCategoriaDto) {\n    return this.categoriasService.update(+id, updateCategoriaDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.categoriasService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriasModule.html":{"url":"modules/CategoriasModule.html","title":"module - CategoriasModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CategoriasModule\n\n\n\ncluster_CategoriasModule_providers\n\n\n\n\nCategoriasService\n\nCategoriasService\n\n\n\nCategoriasModule\n\nCategoriasModule\n\nCategoriasModule -->\n\nCategoriasService->CategoriasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/categorias/categorias.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoriasService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoriasController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CategoriasService } from './categorias.service';\nimport { CategoriasController } from './categorias.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Categoria } from './entities/categoria.entity';\n\n@Module({\n  controllers: [CategoriasController],\n  providers: [CategoriasService],\n  imports:[\n    TypeOrmModule.forFeature( [ Categoria])\n  ]\n})\nexport class CategoriasModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriasService.html":{"url":"injectables/CategoriasService.html","title":"injectable - CategoriasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categorias/categorias.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCategoriaDto: CreateCategoriaDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/categorias/categorias.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCategoriaDto\n                                    \n                                                CreateCategoriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/categorias/categorias.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/categorias/categorias.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/categorias/categorias.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateCategoriaDto: UpdateCategoriaDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/categorias/categorias.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCategoriaDto\n                                    \n                                                UpdateCategoriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCategoriaDto } from './dto/create-categoria.dto';\nimport { UpdateCategoriaDto } from './dto/update-categoria.dto';\n\n@Injectable()\nexport class CategoriasService {\n  create(createCategoriaDto: CreateCategoriaDto) {\n    return 'This action adds a new categoria';\n  }\n\n  findAll() {\n    return `This action returns all categorias`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} categoria`;\n  }\n\n  update(id: number, updateCategoriaDto: UpdateCategoriaDto) {\n    return `This action updates a #${id} categoria`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} categoria`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Cliente.html":{"url":"entities/Cliente.html","title":"entity - Cliente","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Cliente\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/clientes/entities/cliente.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                github\n                            \n                            \n                                idC\n                            \n                            \n                                    Optional\n                                libros\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                twitter\n                            \n                            \n                                    Optional\n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clientes/entities/cliente.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        github\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clientes/entities/cliente.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idC\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clientes/entities/cliente.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        libros\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Libro[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, libro => libro.cliente, {cascade: false, eager: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clientes/entities/cliente.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clientes/entities/cliente.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        twitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clientes/entities/cliente.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clientes/entities/cliente.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity, OneToMany, PrimaryGeneratedColumn } from \"typeorm\";\nimport { Libro } from '../../libros/entities/libro.entity';\n\n@Entity({ name: 'clientes' })\nexport class Cliente {\n     @PrimaryGeneratedColumn('uuid')\n     idC: string;\n\n     @Column('text', {\n          unique: true,\n     })\n     name: string;\n \n     @Column('text', {\n          unique: true,\n     })\n     email: string;\n\n     @Column('text', {\n          unique:true,\n     })\n     website?: string;   \n \n     @Column('text', {\n          unique: true,\n     })\n     github?: string;\n \n     @Column('text', {\n          unique:true,\n     })\n     twitter?: string;\n\n    // books\n     @OneToMany(\n          () => Libro,\n          (libro) => libro.cliente,\n          // lo mas sensato sería establecer la relación con eliminación en cascada,\n          // haciéndolo de esta manera: { cascade: true, eager: true }\n          // en nuestro caso, no\n          { cascade: false, eager: false }\n     )\n     libros?: Libro[];\n\n     @BeforeInsert()\n     checkUrlInsert() {\n          if ( !this.website.includes('https://' )) {\n               this.website = `https://${this.website}`;\n          }\n\n          if ( !this.github.includes('https://github.com/' )) {\n               this.github = `https://github.com/${this.github}`;\n          }\n\n          if ( !this.twitter.includes('https://twitter.com/' )) {\n               this.twitter = `https://twitter.com/${this.twitter}`;\n          }\n     }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClientesController.html":{"url":"controllers/ClientesController.html","title":"controller - ClientesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClientesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/clientes/clientes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                clientes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createClienteDto: CreateClienteDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/clientes/clientes.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createClienteDto\n                                    \n                                                CreateClienteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/clientes/clientes.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(idC: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':idC')\n                \n            \n\n            \n                \n                    Defined in src/modules/clientes/clientes.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idC\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(idC: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':idC')\n                \n            \n\n            \n                \n                    Defined in src/modules/clientes/clientes.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idC\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(idC: string, updateClienteDto: UpdateClienteDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':idC')\n                \n            \n\n            \n                \n                    Defined in src/modules/clientes/clientes.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idC\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateClienteDto\n                                    \n                                                UpdateClienteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ClientesService } from './clientes.service';\nimport { CreateClienteDto } from './dto/create-cliente.dto';\nimport { UpdateClienteDto } from './dto/update-cliente.dto';\n\n@Controller('clientes')\nexport class ClientesController {\n  constructor(private readonly clientesService: ClientesService) {}\n\n  @Post()\n  create(@Body() createClienteDto: CreateClienteDto) {\n    return this.clientesService.create(createClienteDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.clientesService.findAll();\n  }\n\n  @Get(':idC')\n  findOne(@Param('idC') idC: string) {\n    return this.clientesService.findOne(idC);\n  }\n\n  @Patch(':idC')\n  update(@Param('idC') idC: string, @Body() updateClienteDto: UpdateClienteDto) {\n    return this.clientesService.update(idC, updateClienteDto);\n  }\n\n  @Delete(':idC')\n  remove(@Param('idC') idC: string) {\n    return this.clientesService.remove(idC);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientesModule.html":{"url":"modules/ClientesModule.html","title":"module - ClientesModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ClientesModule\n\n\n\ncluster_ClientesModule_exports\n\n\n\ncluster_ClientesModule_providers\n\n\n\n\nClientesService \n\nClientesService \n\n\n\nClientesModule\n\nClientesModule\n\nClientesService  -->\n\nClientesModule->ClientesService \n\n\n\n\n\nClientesService\n\nClientesService\n\nClientesModule -->\n\nClientesService->ClientesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/clientes/clientes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClientesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClientesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ClientesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientesService } from './clientes.service';\nimport { ClientesController } from './clientes.controller';\nimport { Cliente } from './entities/cliente.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n\n@Module({\n  controllers: [ClientesController],\n  providers: [ClientesService],\n  imports: [\n    TypeOrmModule.forFeature([Cliente])\n  ],\n  exports: [ ClientesService, TypeOrmModule ]\n\n})\nexport class ClientesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientesService.html":{"url":"injectables/ClientesService.html","title":"injectable - ClientesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClientesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/clientes/clientes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteAllClientes\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Private\n                                handleDBErrors\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clienteRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/clientes/clientes.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clienteRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createClienteDto: CreateClienteDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/clientes/clientes.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createClienteDto\n                                    \n                                                CreateClienteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteAllClientes\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAllClientes()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/clientes/clientes.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/clientes/clientes.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(idC: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/clientes/clientes.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idC\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleDBErrors\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleDBErrors(error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/clientes/clientes.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(idC: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/clientes/clientes.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idC\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(idC: string, updateClienteDto: UpdateClienteDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/clientes/clientes.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idC\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateClienteDto\n                                    \n                                                UpdateClienteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateClienteDto } from './dto/create-cliente.dto';\nimport { UpdateClienteDto } from './dto/update-cliente.dto';\nimport { Cliente } from './entities/cliente.entity';\n\n@Injectable()\nexport class ClientesService {\n\n  constructor(\n\n    @InjectRepository(Cliente)\n    private readonly clienteRepository: Repository\n\n  ) {}\n\n  async create(createClienteDto: CreateClienteDto) {\n    // return 'This action adds a new cliente';\n    try {\n      const cliente = this.clienteRepository.create(createClienteDto);\n      console.log(cliente);\n      await this.clienteRepository.save(cliente);\n      return cliente;\n    } catch (error) {\n      console.log(error);\n      throw new InternalServerErrorException('Ayuda!')\n    }\n  }\n\n  findAll() {\n    // return `This action returns all clientes`;\n    return this.clienteRepository.find({});\n  }\n\n  findOne(idC: string) {\n    // return `This action returns a #${idC} cliente`;\n    // DESPUES DE RELACION\n    return this.clienteRepository.findOne({\n      where: { \n        idC\n      },\n      relations: { \n        libros: true\n      }\n    });\n  }\n\n  update(idC: string, updateClienteDto: UpdateClienteDto) {\n    return `This action updates a #${idC} cliente`;\n  }\n\n  remove(idC: string) {\n    return `This action removes a #${idC} cliente`;\n  }\n\n  async deleteAllClientes() {\n    const query = this.clienteRepository.createQueryBuilder('cliente');\n\n    try {\n      return await query\n        .delete()\n        .where({})\n        .execute();\n\n    } catch (error) {\n      this.handleDBErrors(error);\n    }\n\n  }\n\n   private handleDBErrors (error: any): never{\n   if (error.code === '23505')\n     throw new BadRequestException(error.detail)\n  \n   throw new InternalServerErrorException('Please Check Server Error ...')\n }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAutoreDto.html":{"url":"classes/CreateAutoreDto.html","title":"class - CreateAutoreDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAutoreDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/autores/dto/create-autore.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateAutoreDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoriaDto.html":{"url":"classes/CreateCategoriaDto.html","title":"class - CreateCategoriaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoriaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categorias/dto/create-categoria.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCategoriaDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateClienteDto.html":{"url":"classes/CreateClienteDto.html","title":"class - CreateClienteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateClienteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/clientes/dto/create-cliente.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                github\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                twitter\n                            \n                            \n                                    Optional\n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clientes/dto/create-cliente.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        github\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clientes/dto/create-cliente.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clientes/dto/create-cliente.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        twitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clientes/dto/create-cliente.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/clientes/dto/create-cliente.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsOptional, IsString, MinLength } from \"class-validator\";\n\nexport class CreateClienteDto {\n    @IsString()\n    @MinLength(1)\n    name: string;\n  \n    @IsString()\n    @MinLength(1)\n    email: string;\n  \n    @IsString()\n    @MinLength(1)\n    @IsOptional()\n    website?: string;\n  \n    @IsString()\n    @MinLength(1)\n    @IsOptional()\n    github?: string;\n  \n    @IsString()\n    @MinLength(1)\n    @IsOptional()\n    twitter?: string;\n }\n \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLibroDto.html":{"url":"classes/CreateLibroDto.html","title":"class - CreateLibroDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLibroDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/libros/dto/create-libro.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                idCliente\n                            \n                            \n                                isbn\n                            \n                            \n                                    Optional\n                                longDescription\n                            \n                            \n                                    Optional\n                                pageCount\n                            \n                            \n                                    Optional\n                                publishedDate\n                            \n                            \n                                    Optional\n                                shortDescription\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                    Optional\n                                thumbnailUrl\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        idCliente\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/libros/dto/create-libro.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isbn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/libros/dto/create-libro.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/libros/dto/create-libro.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        pageCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/libros/dto/create-libro.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        publishedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/libros/dto/create-libro.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        shortDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/libros/dto/create-libro.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)@IsOptional()@IsIn(['PUBLISH', 'UNPUBLISH'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/libros/dto/create-libro.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        thumbnailUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/libros/dto/create-libro.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/libros/dto/create-libro.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIn, IsNumber, IsOptional, IsString, MinLength } from \"class-validator\";\n\nexport class CreateLibroDto {\n    @IsString()\n    @MinLength(1)\n    title: string;\n  \n    @IsString()\n    @MinLength(1)\n    isbn: string;\n  \n    @IsNumber()\n    @IsOptional()\n    pageCount?: number;\n  \n    @IsString()\n    @MinLength(1)\n    @IsOptional()\n    publishedDate?: string;\n  \n    @IsString()\n    @MinLength(1)\n    @IsOptional()\n    thumbnailUrl?: string;\n\n    @IsString()\n    @MinLength(1)\n    @IsOptional()\n    shortDescription?: string;\n\n    @IsString()\n    @MinLength(1)\n    @IsOptional()\n    longDescription?: string;\n\n    @IsString()\n    @MinLength(1)\n    @IsOptional()\n    @IsIn(['PUBLISH', 'UNPUBLISH'])\n    status?: string;\n\n    @IsString()\n    idCliente?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileDto.html":{"url":"classes/CreateProfileDto.html","title":"class - CreateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/dto/create-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                github\n                            \n                            \n                                idCliente\n                            \n                            \n                                password\n                            \n                            \n                                twitter\n                            \n                            \n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dto/create-profile.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        github\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dto/create-profile.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idCliente\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dto/create-profile.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dto/create-profile.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        twitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dto/create-profile.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dto/create-profile.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, MinLength } from \"class-validator\";\n\nexport class CreateProfileDto {\n\n\n    @IsString()\n    @MinLength(1)\n    email: string;\n\n    @IsString()\n    @MinLength(1)\n    password: string;\n\n    @IsString()\n    @MinLength(1)\n    website: string;\n\n    @IsString()\n    @MinLength(1)\n    github: string;\n\n    @IsString()\n    @MinLength(1)\n    twitter: string;\n\n    @IsString()\n    @MinLength(1)\n    idCliente: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                fullName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(6)@MaxLength(50)@Matches(/(?:(?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'The password must have a Uppercase, lowercase letter and a number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString, Matches, MaxLength, MinLength } from \"class-validator\";\n\nexport class CreateUserDto {\n    \n    @IsString()\n    @IsEmail()\n    email: string;\n\n    @IsString()\n    @MinLength(6)\n    @MaxLength(50)\n    @Matches(\n    /(?:(?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'The password must have a Uppercase, lowercase letter and a number'\n    })\n    password: string;\n\n    @IsString()\n    @MinLength(1)\n    fullName:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/interfaces/jwt-payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload{\n    email:string\n    // podemos añadir mas campos\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/strategies/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/strategies/jwt.strategy.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from \"@nestjs/passport\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { Repository } from \"typeorm\";\nimport { User } from \"../entities/user.entity\";\nimport { JwtPayload } from '../interfaces/jwt-payload.interface';\nimport { ConfigService } from '@nestjs/config';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy( Strategy ) {\n\n    constructor (\n        @InjectRepository (User)\n        private readonly userRepository: Repository,\n        configService: ConfigService \n    ){\n        //llamamos al constructor del padre\n        super({\n            secretOrKey: configService.get('JWT_SECRET'),            \n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            //el token lo mandamos como un parametro 'token' del la seccion 'auth' de la request\n            // y  de tipo 'Bearer Token' \n        })\n    }\n\n    async validate ( payload: JwtPayload ): Promise{\n        const { email } = payload;\n        const user = await this.userRepository.findOneBy({ email });\n\n        if (!user )\n            throw new UnauthorizedException('Token no valido');\n        \n        if (!user.isActive ) //existe pero no activo\n            throw new UnauthorizedException('usuario no activo');\n        \n        //si pasa validate --> el user se añade a la REQUEST \n        //y el usuario estára disponible en todos los lados del proceso de esta petición\n        //usaremos DECORADORES personalizados para extraer el usuario REGISTRADO de la REQUEST\n        return user;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Libro.html":{"url":"entities/Libro.html","title":"entity - Libro","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Libro\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/libros/entities/libro.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cliente\n                            \n                            \n                                idL\n                            \n                            \n                                isbn\n                            \n                            \n                                longDescription\n                            \n                            \n                                pageCount\n                            \n                            \n                                publishedDate\n                            \n                            \n                                shortDescription\n                            \n                            \n                                status\n                            \n                            \n                                thumbnailUrl\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cliente\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cliente\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cliente => cliente.libros, {cascade: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/libros/entities/libro.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/libros/entities/libro.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isbn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/libros/entities/libro.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/libros/entities/libro.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('integer', {default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/libros/entities/libro.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publishedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/libros/entities/libro.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/libros/entities/libro.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/libros/entities/libro.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thumbnailUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/libros/entities/libro.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/libros/entities/libro.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BeforeInsert, Column, Entity, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\nimport { Cliente } from '../../clientes/entities/cliente.entity';\n\n@Entity({ name: 'libros' })\nexport class Libro {\n     @PrimaryGeneratedColumn('uuid')\n     idL: string;\n \n     @Column('text', {\n          unique: true,\n     })\n     title: string;\n\n     @Column('text', {\n          unique: true,\n     })\n     isbn: string;\n\n     @Column('integer', {\n          default: 0,\n     })\n     pageCount: number;\n\n     @Column({\n          type:'text',\n     })\n     publishedDate: string;\n\n     @Column('text', {\n          unique: true,\n     })\n     thumbnailUrl: string;\n\n     @Column('text', {\n          nullable: true,\n     })\n     shortDescription: string;\n\n     @Column('text', {\n          nullable: true,\n     })\n     longDescription: string;\n\n     @Column('text', {\n          // unique: true,\n     })\n     status: string;\n\n     // authors\n     \n     // clients (sin definir en la data)\n     @ManyToOne(\n          () => Cliente,\n          ( cliente ) => cliente.libros,\n          // { onDelete: 'CASCADE' }\n          { cascade: false }\n     )\n     cliente: Cliente;\n\n     @BeforeInsert()\n     checkTitleInsert() {\n         this.title = this.title\n             .toUpperCase()\n     }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LibrosController.html":{"url":"controllers/LibrosController.html","title":"controller - LibrosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LibrosController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/libros/libros.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                libros\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createLibroDto: CreateLibroDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/libros/libros.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createLibroDto\n                                    \n                                                CreateLibroDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/libros/libros.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(idL: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':idL')\n                \n            \n\n            \n                \n                    Defined in src/modules/libros/libros.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idL\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(idL: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':idL')\n                \n            \n\n            \n                \n                    Defined in src/modules/libros/libros.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idL\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(idL: string, updateLibroDto: UpdateLibroDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':idL')\n                \n            \n\n            \n                \n                    Defined in src/modules/libros/libros.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idL\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateLibroDto\n                                    \n                                                UpdateLibroDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { LibrosService } from './libros.service';\nimport { CreateLibroDto } from './dto/create-libro.dto';\nimport { UpdateLibroDto } from './dto/update-libro.dto';\n\n@Controller('libros')\nexport class LibrosController {\n  constructor(private readonly librosService: LibrosService) {}\n\n  @Post()\n  create(@Body() createLibroDto: CreateLibroDto) {\n    return this.librosService.create(createLibroDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.librosService.findAll();\n  }\n\n  @Get(':idL')\n  findOne(@Param('idL') idL: string) {\n    return this.librosService.findOne(idL);\n  }\n\n  @Patch(':idL')\n  update(@Param('idL') idL: string, @Body() updateLibroDto: UpdateLibroDto) {\n    return this.librosService.update(idL, updateLibroDto);\n  }\n\n  @Delete(':idL')\n  remove(@Param('idL') idL: string) {\n    return this.librosService.remove(idL);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LibrosModule.html":{"url":"modules/LibrosModule.html","title":"module - LibrosModule","body":"\n                   \n\n\n\n\n    Modules\n    LibrosModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LibrosModule\n\n\n\ncluster_LibrosModule_imports\n\n\n\ncluster_LibrosModule_exports\n\n\n\ncluster_LibrosModule_providers\n\n\n\n\nClientesModule\n\nClientesModule\n\n\n\nLibrosModule\n\nLibrosModule\n\nLibrosModule -->\n\nClientesModule->LibrosModule\n\n\n\n\n\nLibrosService \n\nLibrosService \n\nLibrosService  -->\n\nLibrosModule->LibrosService \n\n\n\n\n\nLibrosService\n\nLibrosService\n\nLibrosModule -->\n\nLibrosService->LibrosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/libros/libros.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LibrosService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LibrosController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ClientesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LibrosService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LibrosService } from './libros.service';\nimport { LibrosController } from './libros.controller';\nimport { Libro } from './entities/libro.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ClientesModule } from '../clientes/clientes.module';\n\n@Module({\n  controllers: [LibrosController],\n  providers: [LibrosService],\n  imports: [\n    ClientesModule,\n    TypeOrmModule.forFeature([Libro])\n  ],\n  exports: [ LibrosService, TypeOrmModule ]\n})\nexport class LibrosModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LibrosService.html":{"url":"injectables/LibrosService.html","title":"injectable - LibrosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LibrosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/libros/libros.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(libroRepository: Repository, clientesService: ClientesService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/libros/libros.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        libroRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientesService\n                                                  \n                                                        \n                                                                        ClientesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createLibroDto: CreateLibroDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/libros/libros.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createLibroDto\n                                    \n                                                CreateLibroDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/libros/libros.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(idL: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/libros/libros.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idL\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(idL: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/libros/libros.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idL\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(idL: string, updateLibroDto: UpdateLibroDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/libros/libros.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idL\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateLibroDto\n                                    \n                                                UpdateLibroDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateLibroDto } from './dto/create-libro.dto';\nimport { UpdateLibroDto } from './dto/update-libro.dto';\nimport { Libro } from './entities/libro.entity';\nimport { ClientesService } from '../clientes/clientes.service';\n\n@Injectable()\nexport class LibrosService {\n\n  constructor(\n\n    @InjectRepository(Libro)\n    private readonly libroRepository: Repository,\n    private readonly clientesService: ClientesService\n\n  ) {}\n\n  async create(createLibroDto: CreateLibroDto) {\n    // return 'This action adds a new libro';\n    try {\n      // ANTES DE RELACION\n      // const libro = this.libroRepository.create(createLibroDto);\n      // await this.libroRepository.save(libro);\n      // return libro;\n      \n      // DESPUES DE RELACION\n      // prepara la consulta\n      // const idC = createLibroDto.idCliente;\n      const { idCliente, ...campos } = createLibroDto;\n      console.log({ ...campos });\n      const cliente = this.clientesService.findOne( idCliente );\n      const libro = this.libroRepository.create({ ...campos });\n      libro.cliente = await this.clientesService.findOne( idCliente );\n      // se lanza la peticion al SGBD (postgres) --> esperar (x segundos)\n      await this.libroRepository.save( libro );\n      return libro;\n    } catch (error) {\n      console.log(error);\n      throw new InternalServerErrorException('Error en BD!')\n    }\n  }\n  \n  findAll() {\n    // return `This action returns all libros`;\n    return this.libroRepository.find({});\n\n  }\n\n  findOne(idL: string) {\n    return `This action returns a #${idL} libro`;\n  }\n\n  update(idL: string, updateLibroDto: UpdateLibroDto) {\n    return `This action updates a #${idL} libro`;\n  }\n\n  remove(idL: string) {\n    return `This action removes a #${idL} libro`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/login.dto.ts.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.dto.ts.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(6)@MaxLength(50)@Matches(/(?:(?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'The password must have a Uppercase, lowercase letter and a number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.dto.ts.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString, Matches, MaxLength, MinLength } from \"class-validator\";\n\nexport class LoginUserDto {\n    \n    @IsString()\n    @IsEmail()\n    email: string;\n\n    @IsString()\n    @MinLength(6)\n    @MaxLength(50)\n    @Matches(\n    /(?:(?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'The password must have a Uppercase, lowercase letter and a number'\n    })\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Profile.html":{"url":"entities/Profile.html","title":"entity - Profile","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/entities/profile.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                cliente\n                            \n                            \n                                email\n                            \n                            \n                                github\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                profileId\n                            \n                            \n                                twitter\n                            \n                            \n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        cliente\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cliente\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/entities/profile.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/entities/profile.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        github\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/entities/profile.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/entities/profile.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/entities/profile.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        twitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/entities/profile.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/entities/profile.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Cliente } from \"src/modules/clientes/entities/cliente.entity\";\nimport { Column, Entity, JoinColumn, OneToOne, PrimaryGeneratedColumn } from \"typeorm\";\n\n@Entity()\nexport class Profile {\n    @PrimaryGeneratedColumn('uuid')\n    profileId: string;\n\n    @Column('text', { unique: true })\n    email: string;\n\n    @Column('text')\n    password?: string;\n\n    @Column('text', { nullable: true })\n    github: string;\n\n    @Column('text', { nullable: true })\n    twitter: string;\n\n    @Column('text',{ nullable: true })\n    website: string;\n\n    // @OneToOne(\n    //     () => Cliente,\n    //     (cliente) => cliente.profile\n    // )\n    @JoinColumn()\n    cliente?: Cliente \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProfileDto: CreateProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProfileDto\n                                    \n                                                CreateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateProfileDto: UpdateProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProfileDto\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ProfileService } from './profile.service';\nimport { CreateProfileDto } from './dto/create-profile.dto';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\n\n@Controller('profile')\nexport class ProfileController {\n  constructor(private readonly profileService: ProfileService) {}\n\n  @Post()\n  create(@Body() createProfileDto: CreateProfileDto) {\n    return this.profileService.create(createProfileDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.profileService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.profileService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateProfileDto: UpdateProfileDto) {\n    return this.profileService.update(+id, updateProfileDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.profileService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_ProfileModule_imports\n\n\n\n\nClientesModule\n\nClientesModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nClientesModule->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ClientesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProfileService } from './profile.service';\nimport { ProfileController } from './profile.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Profile } from './entities/profile.entity';\nimport { ClientesModule } from '../clientes/clientes.module';\n\n@Module({\n  controllers: [ProfileController],\n  providers: [ProfileService],\n  imports: \n    [ \n      TypeOrmModule.forFeature([Profile]),\n      ClientesModule\n    ],\n   \n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepositorio: Repository, clienteService: ClientesService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/profile/profile.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepositorio\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clienteService\n                                                  \n                                                        \n                                                                        ClientesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createProfileDto: CreateProfileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProfileDto\n                                    \n                                                CreateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateProfileDto: UpdateProfileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProfileDto\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateProfileDto } from './dto/create-profile.dto';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\nimport { Profile } from './entities/profile.entity';\nimport { Repository } from 'typeorm';\nimport { ClientesService } from '../clientes/clientes.service';\n\n@Injectable()\nexport class ProfileService {\n\n  constructor(\n    @InjectRepository(Profile)\n    private readonly profileRepositorio: Repository,\n    private readonly clienteService: ClientesService\n  ){\n\n  }\n  async create(createProfileDto: CreateProfileDto) {\n    try {\n      console.log(createProfileDto);\n      const { idCliente, ...camposProfile } = createProfileDto;\n      const profile = this.profileRepositorio.create({...camposProfile});\n      const cliente = await this.clienteService.findOne(idCliente);\n      profile.cliente = cliente;\n      await this.profileRepositorio.save(profile);\n      \n      // cliente.profile = profile;\n      // await this.clienteService.create(cliente);\n\n      return profile\n    } catch(error){\n        return new InternalServerErrorException('Error en BD')\n    }\n    \n  }\n\n  findAll() {\n    return `This action returns all profile`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} profile`;\n  }\n\n  update(id: number, updateProfileDto: UpdateProfileDto) {\n    return `This action updates a #${id} profile`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} profile`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SeedController.html":{"url":"controllers/SeedController.html","title":"controller - SeedController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SeedController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/seed/seed.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                seed\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                excuteSeed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        excuteSeed\n                        \n                    \n                \n            \n            \n                \nexcuteSeed()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/seed/seed.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { SeedService } from './seed.service';\n\n\n@Controller('seed')\nexport class SeedController {\n  constructor(private readonly seedService: SeedService) {}\n\n  @Get()\n  excuteSeed() {\n    return this.seedService.runData();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeedModule.html":{"url":"modules/SeedModule.html","title":"module - SeedModule","body":"\n                   \n\n\n\n\n    Modules\n    SeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SeedModule\n\n\n\ncluster_SeedModule_imports\n\n\n\ncluster_SeedModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nSeedModule\n\nSeedModule\n\nSeedModule -->\n\nAuthModule->SeedModule\n\n\n\n\n\nClientesModule\n\nClientesModule\n\nSeedModule -->\n\nClientesModule->SeedModule\n\n\n\n\n\nSeedService\n\nSeedService\n\nSeedModule -->\n\nSeedService->SeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/seed/seed.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SeedService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SeedController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ClientesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SeedService } from './seed.service';\nimport { SeedController } from './seed.controller';\nimport { ClientesModule } from '../clientes/clientes.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthModule } from '../auth/auth.module';\nimport { AuthService } from '../auth/auth.service';\n\n@Module({\n  controllers: [SeedController],\n  providers: [SeedService],\n  imports: [ClientesModule,AuthModule]\n})\nexport class SeedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeedService.html":{"url":"injectables/SeedService.html","title":"injectable - SeedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/seed/seed.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                insertNewClientes\n                            \n                            \n                                runData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientesService: ClientesService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/seed/seed.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientesService\n                                                  \n                                                        \n                                                                        ClientesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        insertNewClientes\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertNewClientes()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/seed/seed.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runData\n                        \n                    \n                \n            \n            \n                \nrunData()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/seed/seed.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n// import { AuthService } from '../auth/auth.service';\nimport { ClientesService } from '../clientes/clientes.service';\n// import  dataUsers  from '../seed/data/users.json'; \nimport  dataClientes  from '../seed/data/mis-clientes.json';\n\n  \n  @Injectable()\nexport class SeedService {\n \n  constructor (\n  //  private readonly userService: AuthService,\n   private readonly clientesService: ClientesService \n ){}\n \n runData(){\n   this.clientesService.deleteAllClientes()\n   this.insertNewClientes()\n  //  this.userService.deleteAllUsers();\n  //  this.insertNewUsers();\n   return dataClientes;\n }\n  \n\n    private async insertNewClientes(){\n      const insertPromises = [];\n      dataClientes.forEach( cliente => {\n        insertPromises.push(this.clientesService.create(cliente))\n      })\n      await Promise.all(insertPromises);\n    }\n   \n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAutoreDto.html":{"url":"classes/UpdateAutoreDto.html","title":"class - UpdateAutoreDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAutoreDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/autores/dto/update-autore.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAutoreDto } from './create-autore.dto';\n\nexport class UpdateAutoreDto extends PartialType(CreateAutoreDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoriaDto.html":{"url":"classes/UpdateCategoriaDto.html","title":"class - UpdateCategoriaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoriaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categorias/dto/update-categoria.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCategoriaDto } from './create-categoria.dto';\n\nexport class UpdateCategoriaDto extends PartialType(CreateCategoriaDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateClienteDto.html":{"url":"classes/UpdateClienteDto.html","title":"class - UpdateClienteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateClienteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/clientes/dto/update-cliente.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateClienteDto } from './create-cliente.dto';\n\nexport class UpdateClienteDto extends PartialType(CreateClienteDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLibroDto.html":{"url":"classes/UpdateLibroDto.html","title":"class - UpdateLibroDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLibroDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/libros/dto/update-libro.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateLibroDto } from './create-libro.dto';\n\nexport class UpdateLibroDto extends PartialType(CreateLibroDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProfileDto } from './create-profile.dto';\n\nexport class UpdateProfileDto extends PartialType(CreateProfileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                fullName\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                password\n                            \n                            \n                                Prueba\n                            \n                            \n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('bool', {default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Prueba\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from \"typeorm\";\n\n@Entity('users')\nexport class User {\n\n    @PrimaryGeneratedColumn('uuid')\n    id:string;\n\n    @Column('text', { unique: true })\n    email: string;\n\n    @Column('text', { select: false })\n    password: string;\n\n    @Column('text')\n    fullName: string;\n\n    @Column('bool', { default: true })\n    isActive: boolean;\n\n    @Column('text', {\n        array: true,\n        default: ['user']\n    })\n    roles: string[]\n\n    @Column('text')\n    Prueba: string;}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/login.dto.ts.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/interfaces/jwt-payload.interface.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/autores/autores.controller.ts\n            \n            controller\n            AutoresController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/autores/autores.service.ts\n            \n            injectable\n            AutoresService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/autores/dto/create-autore.dto.ts\n            \n            class\n            CreateAutoreDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/autores/dto/update-autore.dto.ts\n            \n            class\n            UpdateAutoreDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/autores/entities/autor.entity.ts\n            \n            entity\n            Autor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/categorias/categorias.controller.ts\n            \n            controller\n            CategoriasController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/categorias/categorias.service.ts\n            \n            injectable\n            CategoriasService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/categorias/dto/create-categoria.dto.ts\n            \n            class\n            CreateCategoriaDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/categorias/dto/update-categoria.dto.ts\n            \n            class\n            UpdateCategoriaDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/categorias/entities/categoria.entity.ts\n            \n            entity\n            Categoria\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/clientes/clientes.controller.ts\n            \n            controller\n            ClientesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/clientes/clientes.service.ts\n            \n            injectable\n            ClientesService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/clientes/dto/create-cliente.dto.ts\n            \n            class\n            CreateClienteDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/clientes/dto/update-cliente.dto.ts\n            \n            class\n            UpdateClienteDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/clientes/entities/cliente.entity.ts\n            \n            entity\n            Cliente\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/libros/dto/create-libro.dto.ts\n            \n            class\n            CreateLibroDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/libros/dto/update-libro.dto.ts\n            \n            class\n            UpdateLibroDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/libros/entities/libro.entity.ts\n            \n            entity\n            Libro\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/libros/libros.controller.ts\n            \n            controller\n            LibrosController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/libros/libros.service.ts\n            \n            injectable\n            LibrosService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/profile/dto/create-profile.dto.ts\n            \n            class\n            CreateProfileDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/profile/dto/update-profile.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/profile/entities/profile.entity.ts\n            \n            entity\n            Profile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/seed/seed.controller.ts\n            \n            controller\n            SeedController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/seed/seed.service.ts\n            \n            injectable\n            SeedService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/mapped-types : ^1.2.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            pg : ^8.8.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHola\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AutoresModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LibrosModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AutoresModule\n\n\n\ncluster_AutoresModule_providers\n\n\n\ncluster_CategoriasModule\n\n\n\ncluster_CategoriasModule_providers\n\n\n\ncluster_ClientesModule\n\n\n\ncluster_ClientesModule_exports\n\n\n\ncluster_ClientesModule_providers\n\n\n\ncluster_LibrosModule\n\n\n\ncluster_LibrosModule_exports\n\n\n\ncluster_LibrosModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_SeedModule\n\n\n\ncluster_SeedModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nSeedModule\n\nSeedModule\n\nSeedModule -->\n\nAuthModule->SeedModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAutoresModule\n\nAutoresModule\n\nAppModule -->\n\nAutoresModule->AppModule\n\n\n\n\n\nCategoriasModule\n\nCategoriasModule\n\nAppModule -->\n\nCategoriasModule->AppModule\n\n\n\n\n\nClientesModule\n\nClientesModule\n\n\n\nLibrosModule\n\nLibrosModule\n\nLibrosModule -->\n\nClientesModule->LibrosModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nClientesModule->ProfileModule\n\n\n\nSeedModule -->\n\nClientesModule->SeedModule\n\n\n\nAppModule -->\n\nClientesModule->AppModule\n\n\n\n\n\nClientesService \n\nClientesService \n\nClientesService  -->\n\nClientesModule->ClientesService \n\n\n\nAppModule -->\n\nLibrosModule->AppModule\n\n\n\n\n\nLibrosService \n\nLibrosService \n\nLibrosService  -->\n\nLibrosModule->LibrosService \n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\nAppModule -->\n\nSeedModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nAutoresService\n\nAutoresService\n\nAutoresModule -->\n\nAutoresService->AutoresModule\n\n\n\n\n\nCategoriasService\n\nCategoriasService\n\nCategoriasModule -->\n\nCategoriasService->CategoriasModule\n\n\n\n\n\nClientesService\n\nClientesService\n\nClientesModule -->\n\nClientesService->ClientesModule\n\n\n\n\n\nLibrosService\n\nLibrosService\n\nLibrosModule -->\n\nLibrosService->LibrosModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nSeedService\n\nSeedService\n\nSeedModule -->\n\nSeedService->SeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
